CCS PCM C Compiler, Version 3.249, 33340               23-Mar-14 23:03

               Filename: E:\Ganesh Potti\Ganesh Projects\Engineers Projects\Smart Host microcontroller_skcet(finished)\final simulation_solar tracking\pro.lst

               ROM used: 935 words (11%)
                         Largest free fragment is 2048
               RAM used: 33 (19%) at main() level
                         42 (24%) worst case
               Stack:    4 worst case (3 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   138
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   08A
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses NOWDT,HS,PUT, NOPROTECT,BROWNOUT, NOLVP, NOCPD, NOWRT 
.................... #device adc=10 
.................... #use delay(clock=11059200) 
*
0096:  MOVLW  41
0097:  MOVWF  04
0098:  MOVF   00,W
0099:  BTFSC  03.2
009A:  GOTO   0A8
009B:  MOVLW  03
009C:  MOVWF  78
009D:  CLRF   77
009E:  DECFSZ 77,F
009F:  GOTO   09E
00A0:  DECFSZ 78,F
00A1:  GOTO   09D
00A2:  MOVLW  95
00A3:  MOVWF  77
00A4:  DECFSZ 77,F
00A5:  GOTO   0A4
00A6:  DECFSZ 00,F
00A7:  GOTO   09B
00A8:  RETLW  00
....................  
.................... #byte portb=0x06 
.................... #byte portc=0x07 
.................... #byte portd=0x08 
.................... #byte porte=0x09 
....................  
.................... #byte trisb=0x86 
.................... #byte trisc=0x87 
.................... #byte trisd=0x88 
.................... #byte trise=0x89 
....................  
.................... #bit reg=portb.7 
.................... #bit rw=porte.1 
.................... #bit en=porte.2 
....................  
.................... #bit motor1_p=portb.0 
.................... #bit motor1_n=portb.1 
.................... #bit motor2_p=portb.2 
.................... #bit motor2_n=portb.3 
.................... #bit relay1=portb.4 
.................... #bit relay2=portb.5 
....................  
.................... #bit RELAY3=portc.0 
.................... #bit RELAY4=portc.1 
....................  
.................... unsigned int16 value1=0, value2=0, value3=0, value4=0, value5=0, value6=0; 
*
0142:  BCF    03.5
0143:  CLRF   28
0144:  CLRF   29
0145:  CLRF   2A
0146:  CLRF   2B
0147:  CLRF   2C
0148:  CLRF   2D
0149:  CLRF   2E
014A:  CLRF   2F
014B:  CLRF   30
014C:  CLRF   31
014D:  CLRF   32
014E:  CLRF   33
.................... unsigned char sec = 0, time = 0; 
014F:  CLRF   34
0150:  CLRF   35
.................... int1 flag=0 , glag = 0; 
0151:  BCF    36.0
0152:  BCF    36.1
.................... int z=0; 
0153:  CLRF   37
....................  
.................... void display(unsigned int16); 
.................... void command(unsigned char com); 
.................... void data(unsigned char da); 
....................  
.................... void command(unsigned char com){ 
....................    portd=com; 
*
00A9:  MOVF   3F,W
00AA:  MOVWF  08
....................    reg=0; 
00AB:  BCF    06.7
....................    rw=0; 
00AC:  BCF    09.1
....................    en=1; 
00AD:  BSF    09.2
....................    delay_ms(1); 
00AE:  MOVLW  01
00AF:  MOVWF  41
00B0:  CALL   096
....................    en=0; 
00B1:  BCF    09.2
.................... } 
00B2:  RETLW  00
....................  
.................... void data(unsigned char da){ 
....................    portd=da; 
00B3:  MOVF   40,W
00B4:  MOVWF  08
....................    reg=1; 
00B5:  BSF    06.7
....................    rw=0; 
00B6:  BCF    09.1
....................    en=1; 
00B7:  BSF    09.2
....................    delay_ms(1); 
00B8:  MOVLW  01
00B9:  MOVWF  41
00BA:  CALL   096
....................    en=0; 
00BB:  BCF    09.2
.................... } 
00BC:  RETLW  00
....................  
.................... #int_TIMER0 
.................... TIMER0_isr() 
.................... { 
....................    time++; 
*
008A:  INCF   35,F
....................    if(time>=43) 
008B:  MOVF   35,W
008C:  SUBLW  2A
008D:  BTFSC  03.0
008E:  GOTO   092
....................    { 
....................       time=0; 
008F:  CLRF   35
....................       flag=1; 
0090:  BSF    36.0
....................       glag=1; 
0091:  BSF    36.1
....................  
....................    } 
.................... } 
....................  
0092:  BCF    0B.2
0093:  BCF    0A.3
0094:  BCF    0A.4
0095:  GOTO   01D
.................... void main() 
.................... { 
*
0138:  CLRF   04
0139:  MOVLW  1F
013A:  ANDWF  03,F
013B:  BSF    03.5
013C:  BSF    1F.0
013D:  BSF    1F.1
013E:  BSF    1F.2
013F:  BCF    1F.3
0140:  MOVLW  07
0141:  MOVWF  1C
....................    portd=0x00; 
*
0154:  CLRF   08
....................    porte=0x00; 
0155:  CLRF   09
....................  
....................    trisd=0x00; 
0156:  BSF    03.5
0157:  CLRF   08
....................    trise=0x01; 
0158:  MOVLW  01
0159:  MOVWF  09
....................  
....................    portb=0x00; 
015A:  BCF    03.5
015B:  CLRF   06
....................    trisb=0x00; 
015C:  BSF    03.5
015D:  CLRF   06
....................  
....................    portc=0x00; 
015E:  BCF    03.5
015F:  CLRF   07
....................    trisc=0x00; 
0160:  BSF    03.5
0161:  CLRF   07
....................  
....................    command(0x38); delay_ms(5); 
0162:  MOVLW  38
0163:  BCF    03.5
0164:  MOVWF  3F
0165:  CALL   0A9
0166:  MOVLW  05
0167:  MOVWF  41
0168:  CALL   096
....................    command(0x06); delay_ms(5); 
0169:  MOVLW  06
016A:  MOVWF  3F
016B:  CALL   0A9
016C:  MOVLW  05
016D:  MOVWF  41
016E:  CALL   096
....................    command(0x0c); delay_ms(5); 
016F:  MOVLW  0C
0170:  MOVWF  3F
0171:  CALL   0A9
0172:  MOVLW  05
0173:  MOVWF  41
0174:  CALL   096
....................    command(0x01); delay_ms(5); 
0175:  MOVLW  01
0176:  MOVWF  3F
0177:  CALL   0A9
0178:  MOVLW  05
0179:  MOVWF  41
017A:  CALL   096
....................  
....................    command(0x80); 
017B:  MOVLW  80
017C:  MOVWF  3F
017D:  CALL   0A9
....................    data("SOLAR TRACKING"); 
017E:  CLRF   38
017F:  MOVF   38,W
0180:  CALL   033
0181:  IORLW  00
0182:  BTFSC  03.2
0183:  GOTO   188
0184:  INCF   38,F
0185:  MOVWF  40
0186:  CALL   0B3
0187:  GOTO   17F
....................  
....................    set_timer0(0x00); //set TMR0 initial value to zero 
0188:  CLRF   01
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256); //set timer0 mode 
0189:  BSF    03.5
018A:  MOVF   01,W
018B:  ANDLW  C0
018C:  IORLW  07
018D:  MOVWF  01
....................                  
....................    setup_adc( ADC_CLOCK_INTERNAL ); 
018E:  BCF    1F.6
018F:  BCF    03.5
0190:  BSF    1F.6
0191:  BSF    1F.7
0192:  BSF    03.5
0193:  BSF    1F.7
0194:  BCF    03.5
0195:  BSF    1F.0
....................    setup_adc_ports(AN0_AN1_AN2_AN3_AN4_AN5); 
0196:  BSF    03.5
0197:  BSF    1F.0
0198:  BCF    1F.1
0199:  BCF    1F.2
019A:  BSF    1F.3
....................  
....................    enable_interrupts(INT_TIMER0); //enable timer overflow interrupt 
019B:  BCF    03.5
019C:  BSF    0B.5
....................  
....................    enable_interrupts(GLOBAL); //enable global interrupt 
019D:  MOVLW  C0
019E:  IORWF  0B,F
....................  
....................  
....................    delay_ms(2000); 
019F:  MOVLW  08
01A0:  MOVWF  38
01A1:  MOVLW  FA
01A2:  MOVWF  41
01A3:  CALL   096
01A4:  DECFSZ 38,F
01A5:  GOTO   1A1
....................    command(0x01); 
01A6:  MOVLW  01
01A7:  MOVWF  3F
01A8:  CALL   0A9
....................    delay_ms(2); 
01A9:  MOVLW  02
01AA:  MOVWF  41
01AB:  CALL   096
....................  
....................  
....................    while(1) 
....................    {   
....................     
....................      if(glag == 1) 
01AC:  BTFSS  36.1
01AD:  GOTO   24B
....................      { 
....................       glag=0; 
01AE:  BCF    36.1
....................       set_adc_channel(0); 
01AF:  MOVLW  00
01B0:  MOVWF  78
01B1:  MOVF   1F,W
01B2:  ANDLW  C7
01B3:  IORWF  78,W
01B4:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01B5:  MOVLW  5B
01B6:  MOVWF  77
01B7:  DECFSZ 77,F
01B8:  GOTO   1B7
01B9:  NOP
01BA:  NOP
....................       value1=read_adc(); 
01BB:  BSF    1F.2
01BC:  BTFSC  1F.2
01BD:  GOTO   1BC
01BE:  BSF    03.5
01BF:  MOVF   1E,W
01C0:  BCF    03.5
01C1:  MOVWF  28
01C2:  MOVF   1E,W
01C3:  MOVWF  29
....................       delay_us(4); 
01C4:  MOVLW  03
01C5:  MOVWF  77
01C6:  DECFSZ 77,F
01C7:  GOTO   1C6
01C8:  NOP
....................  
....................       set_adc_channel(1); 
01C9:  MOVLW  08
01CA:  MOVWF  78
01CB:  MOVF   1F,W
01CC:  ANDLW  C7
01CD:  IORWF  78,W
01CE:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01CF:  MOVLW  5B
01D0:  MOVWF  77
01D1:  DECFSZ 77,F
01D2:  GOTO   1D1
01D3:  NOP
01D4:  NOP
....................       value2=read_adc(); 
01D5:  BSF    1F.2
01D6:  BTFSC  1F.2
01D7:  GOTO   1D6
01D8:  BSF    03.5
01D9:  MOVF   1E,W
01DA:  BCF    03.5
01DB:  MOVWF  2A
01DC:  MOVF   1E,W
01DD:  MOVWF  2B
....................       delay_us(4); 
01DE:  MOVLW  03
01DF:  MOVWF  77
01E0:  DECFSZ 77,F
01E1:  GOTO   1E0
01E2:  NOP
....................  
....................       set_adc_channel(2); 
01E3:  MOVLW  10
01E4:  MOVWF  78
01E5:  MOVF   1F,W
01E6:  ANDLW  C7
01E7:  IORWF  78,W
01E8:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01E9:  MOVLW  5B
01EA:  MOVWF  77
01EB:  DECFSZ 77,F
01EC:  GOTO   1EB
01ED:  NOP
01EE:  NOP
....................       value3=read_adc(); 
01EF:  BSF    1F.2
01F0:  BTFSC  1F.2
01F1:  GOTO   1F0
01F2:  BSF    03.5
01F3:  MOVF   1E,W
01F4:  BCF    03.5
01F5:  MOVWF  2C
01F6:  MOVF   1E,W
01F7:  MOVWF  2D
....................       delay_us(4); 
01F8:  MOVLW  03
01F9:  MOVWF  77
01FA:  DECFSZ 77,F
01FB:  GOTO   1FA
01FC:  NOP
....................  
....................       set_adc_channel(3); 
01FD:  MOVLW  18
01FE:  MOVWF  78
01FF:  MOVF   1F,W
0200:  ANDLW  C7
0201:  IORWF  78,W
0202:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
0203:  MOVLW  5B
0204:  MOVWF  77
0205:  DECFSZ 77,F
0206:  GOTO   205
0207:  NOP
0208:  NOP
....................       value4=read_adc(); 
0209:  BSF    1F.2
020A:  BTFSC  1F.2
020B:  GOTO   20A
020C:  BSF    03.5
020D:  MOVF   1E,W
020E:  BCF    03.5
020F:  MOVWF  2E
0210:  MOVF   1E,W
0211:  MOVWF  2F
....................       delay_us(40); 
0212:  MOVLW  24
0213:  MOVWF  77
0214:  DECFSZ 77,F
0215:  GOTO   214
0216:  NOP
....................  
....................       set_adc_channel(4); 
0217:  MOVLW  20
0218:  MOVWF  78
0219:  MOVF   1F,W
021A:  ANDLW  C7
021B:  IORWF  78,W
021C:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
021D:  MOVLW  5B
021E:  MOVWF  77
021F:  DECFSZ 77,F
0220:  GOTO   21F
0221:  NOP
0222:  NOP
....................       value5=read_adc(); 
0223:  BSF    1F.2
0224:  BTFSC  1F.2
0225:  GOTO   224
0226:  BSF    03.5
0227:  MOVF   1E,W
0228:  BCF    03.5
0229:  MOVWF  30
022A:  MOVF   1E,W
022B:  MOVWF  31
....................       delay_us(40); 
022C:  MOVLW  24
022D:  MOVWF  77
022E:  DECFSZ 77,F
022F:  GOTO   22E
0230:  NOP
....................  
....................       set_adc_channel(5); 
0231:  MOVLW  28
0232:  MOVWF  78
0233:  MOVF   1F,W
0234:  ANDLW  C7
0235:  IORWF  78,W
0236:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
0237:  MOVLW  5B
0238:  MOVWF  77
0239:  DECFSZ 77,F
023A:  GOTO   239
023B:  NOP
023C:  NOP
....................       value6=read_adc(); 
023D:  BSF    1F.2
023E:  BTFSC  1F.2
023F:  GOTO   23E
0240:  BSF    03.5
0241:  MOVF   1E,W
0242:  BCF    03.5
0243:  MOVWF  32
0244:  MOVF   1E,W
0245:  MOVWF  33
....................       delay_us(40); 
0246:  MOVLW  24
0247:  MOVWF  77
0248:  DECFSZ 77,F
0249:  GOTO   248
024A:  NOP
....................      } 
....................       if(((sec == 0) && (time <= 6)) || ((sec == 6) && (time <= 6))) 
024B:  MOVF   34,F
024C:  BTFSS  03.2
024D:  GOTO   252
024E:  MOVF   35,W
024F:  SUBLW  06
0250:  BTFSC  03.0
0251:  GOTO   25A
0252:  MOVF   34,W
0253:  SUBLW  06
0254:  BTFSS  03.2
0255:  GOTO   263
0256:  MOVF   35,W
0257:  SUBLW  06
0258:  BTFSS  03.0
0259:  GOTO   263
....................       { 
....................          delay_ms(100); 
025A:  MOVLW  64
025B:  MOVWF  41
025C:  CALL   096
....................          command(0x01); 
025D:  MOVLW  01
025E:  MOVWF  3F
025F:  CALL   0A9
....................          delay_ms(2); 
0260:  MOVLW  02
0261:  MOVWF  41
0262:  CALL   096
....................       } 
....................  
....................       if(flag==1) 
0263:  BTFSS  36.0
0264:  GOTO   26B
....................       { 
....................          flag=0; 
0265:  BCF    36.0
....................          sec++; 
0266:  INCF   34,F
....................          if(sec >= 12) 
0267:  MOVF   34,W
0268:  SUBLW  0B
0269:  BTFSS  03.0
....................             sec = 0; 
026A:  CLRF   34
....................       } 
....................  
....................       if(sec < 6) 
026B:  MOVF   34,W
026C:  SUBLW  05
026D:  BTFSS  03.0
026E:  GOTO   2BB
....................       { 
....................          z=0; 
026F:  CLRF   37
....................           
....................          RELAY3=1; 
0270:  BSF    07.0
....................          RELAY4=0; 
0271:  BCF    07.1
....................  
....................          command(0x80); 
0272:  MOVLW  80
0273:  MOVWF  3F
0274:  CALL   0A9
....................          data("L1:"); 
0275:  CLRF   38
0276:  MOVF   38,W
0277:  CALL   046
0278:  IORLW  00
0279:  BTFSC  03.2
027A:  GOTO   27F
027B:  INCF   38,F
027C:  MOVWF  40
027D:  CALL   0B3
027E:  GOTO   276
....................          display(value1); 
027F:  MOVF   29,W
0280:  MOVWF  39
0281:  MOVF   28,W
0282:  MOVWF  38
0283:  CALL   0E3
....................          command(0x88); 
0284:  MOVLW  88
0285:  MOVWF  3F
0286:  CALL   0A9
....................          data("L2:"); 
0287:  CLRF   38
0288:  MOVF   38,W
0289:  CALL   04E
028A:  IORLW  00
028B:  BTFSC  03.2
028C:  GOTO   291
028D:  INCF   38,F
028E:  MOVWF  40
028F:  CALL   0B3
0290:  GOTO   288
....................          display(value2); 
0291:  MOVF   2B,W
0292:  MOVWF  39
0293:  MOVF   2A,W
0294:  MOVWF  38
0295:  CALL   0E3
....................          command(0xC0); 
0296:  MOVLW  C0
0297:  MOVWF  3F
0298:  CALL   0A9
....................          data("L3:"); 
0299:  CLRF   38
029A:  MOVF   38,W
029B:  CALL   056
029C:  IORLW  00
029D:  BTFSC  03.2
029E:  GOTO   2A3
029F:  INCF   38,F
02A0:  MOVWF  40
02A1:  CALL   0B3
02A2:  GOTO   29A
....................          display(value3); 
02A3:  MOVF   2D,W
02A4:  MOVWF  39
02A5:  MOVF   2C,W
02A6:  MOVWF  38
02A7:  CALL   0E3
....................          command(0xC8); 
02A8:  MOVLW  C8
02A9:  MOVWF  3F
02AA:  CALL   0A9
....................          data("L4:"); 
02AB:  CLRF   38
02AC:  MOVF   38,W
02AD:  CALL   05E
02AE:  IORLW  00
02AF:  BTFSC  03.2
02B0:  GOTO   2B5
02B1:  INCF   38,F
02B2:  MOVWF  40
02B3:  CALL   0B3
02B4:  GOTO   2AC
....................          display(value4); 
02B5:  MOVF   2F,W
02B6:  MOVWF  39
02B7:  MOVF   2E,W
02B8:  MOVWF  38
02B9:  CALL   0E3
....................       } 
....................  
....................       else 
02BA:  GOTO   2E3
....................       { 
....................          z=1; 
02BB:  MOVLW  01
02BC:  MOVWF  37
....................           
....................          RELAY3=0; 
02BD:  BCF    07.0
....................          RELAY4=1; 
02BE:  BSF    07.1
....................           
....................          command(0x80); 
02BF:  MOVLW  80
02C0:  MOVWF  3F
02C1:  CALL   0A9
....................          data("BATTERY1 :"); 
02C2:  CLRF   38
02C3:  MOVF   38,W
02C4:  CALL   066
02C5:  IORLW  00
02C6:  BTFSC  03.2
02C7:  GOTO   2CC
02C8:  INCF   38,F
02C9:  MOVWF  40
02CA:  CALL   0B3
02CB:  GOTO   2C3
....................          display(value5); 
02CC:  MOVF   31,W
02CD:  MOVWF  39
02CE:  MOVF   30,W
02CF:  MOVWF  38
02D0:  CALL   0E3
....................          command(0xC0); 
02D1:  MOVLW  C0
02D2:  MOVWF  3F
02D3:  CALL   0A9
....................          data("BATTERY2 :"); 
02D4:  CLRF   38
02D5:  MOVF   38,W
02D6:  CALL   075
02D7:  IORLW  00
02D8:  BTFSC  03.2
02D9:  GOTO   2DE
02DA:  INCF   38,F
02DB:  MOVWF  40
02DC:  CALL   0B3
02DD:  GOTO   2D5
....................          display(value6); 
02DE:  MOVF   33,W
02DF:  MOVWF  39
02E0:  MOVF   32,W
02E1:  MOVWF  38
02E2:  CALL   0E3
....................       } 
....................         
....................       if((value1+100) > value2) 
02E3:  MOVLW  64
02E4:  ADDWF  28,W
02E5:  MOVWF  38
02E6:  MOVF   29,W
02E7:  MOVWF  39
02E8:  BTFSC  03.0
02E9:  INCF   39,F
02EA:  MOVF   2B,W
02EB:  SUBWF  39,W
02EC:  BTFSS  03.0
02ED:  GOTO   2F6
02EE:  BTFSS  03.2
02EF:  GOTO   2F4
02F0:  MOVF   38,W
02F1:  SUBWF  2A,W
02F2:  BTFSC  03.0
02F3:  GOTO   2F6
....................       { 
....................          motor1_p = 1; 
02F4:  BSF    06.0
....................          motor1_n = 0; 
02F5:  BCF    06.1
....................  
....................       } 
....................        
....................        
....................       if((value2+100) > value1) 
02F6:  MOVLW  64
02F7:  ADDWF  2A,W
02F8:  MOVWF  38
02F9:  MOVF   2B,W
02FA:  MOVWF  39
02FB:  BTFSC  03.0
02FC:  INCF   39,F
02FD:  MOVF   29,W
02FE:  SUBWF  39,W
02FF:  BTFSS  03.0
0300:  GOTO   309
0301:  BTFSS  03.2
0302:  GOTO   307
0303:  MOVF   38,W
0304:  SUBWF  28,W
0305:  BTFSC  03.0
0306:  GOTO   309
....................       { 
....................          motor1_p = 0; 
0307:  BCF    06.0
....................          motor1_n = 1; 
0308:  BSF    06.1
....................  
....................       } 
....................  
....................  
....................       if((value3+100) > value4) 
0309:  MOVLW  64
030A:  ADDWF  2C,W
030B:  MOVWF  38
030C:  MOVF   2D,W
030D:  MOVWF  39
030E:  BTFSC  03.0
030F:  INCF   39,F
0310:  MOVF   2F,W
0311:  SUBWF  39,W
0312:  BTFSS  03.0
0313:  GOTO   31C
0314:  BTFSS  03.2
0315:  GOTO   31A
0316:  MOVF   38,W
0317:  SUBWF  2E,W
0318:  BTFSC  03.0
0319:  GOTO   31C
....................       { 
....................          motor2_p = 1; 
031A:  BSF    06.2
....................          motor2_n = 0; 
031B:  BCF    06.3
....................       } 
....................  
....................  
....................       if((value4+100) > value3) 
031C:  MOVLW  64
031D:  ADDWF  2E,W
031E:  MOVWF  38
031F:  MOVF   2F,W
0320:  MOVWF  39
0321:  BTFSC  03.0
0322:  INCF   39,F
0323:  MOVF   2D,W
0324:  SUBWF  39,W
0325:  BTFSS  03.0
0326:  GOTO   32F
0327:  BTFSS  03.2
0328:  GOTO   32D
0329:  MOVF   38,W
032A:  SUBWF  2C,W
032B:  BTFSC  03.0
032C:  GOTO   32F
....................       { 
....................          motor2_p = 0; 
032D:  BCF    06.2
....................          motor2_n = 1; 
032E:  BSF    06.3
....................       } 
....................  
....................  
....................      if(((value1-value2) < 300) || ((value2-value1) < 300)) 
032F:  MOVF   2A,W
0330:  SUBWF  28,W
0331:  MOVWF  38
0332:  MOVF   29,W
0333:  MOVWF  39
0334:  MOVF   2B,W
0335:  BTFSS  03.0
0336:  INCFSZ 2B,W
0337:  SUBWF  39,F
0338:  MOVF   39,W
0339:  SUBLW  01
033A:  BTFSS  03.0
033B:  GOTO   342
033C:  BTFSS  03.2
033D:  GOTO   355
033E:  MOVF   38,W
033F:  SUBLW  2B
0340:  BTFSC  03.0
0341:  GOTO   355
0342:  MOVF   28,W
0343:  SUBWF  2A,W
0344:  MOVWF  3A
0345:  MOVF   2B,W
0346:  MOVWF  3B
0347:  MOVF   29,W
0348:  BTFSS  03.0
0349:  INCFSZ 29,W
034A:  SUBWF  3B,F
034B:  MOVF   3B,W
034C:  SUBLW  01
034D:  BTFSS  03.0
034E:  GOTO   357
034F:  BTFSS  03.2
0350:  GOTO   355
0351:  MOVF   3A,W
0352:  SUBLW  2B
0353:  BTFSS  03.0
0354:  GOTO   357
....................       { 
....................          motor1_p = 0; 
0355:  BCF    06.0
....................          motor1_n = 0; 
0356:  BCF    06.1
....................       } 
....................  
....................  
....................       if(((value3-value4) < 300) || ((value4-value3) < 300)) 
0357:  MOVF   2E,W
0358:  SUBWF  2C,W
0359:  MOVWF  38
035A:  MOVF   2D,W
035B:  MOVWF  39
035C:  MOVF   2F,W
035D:  BTFSS  03.0
035E:  INCFSZ 2F,W
035F:  SUBWF  39,F
0360:  MOVF   39,W
0361:  SUBLW  01
0362:  BTFSS  03.0
0363:  GOTO   36A
0364:  BTFSS  03.2
0365:  GOTO   37D
0366:  MOVF   38,W
0367:  SUBLW  2B
0368:  BTFSC  03.0
0369:  GOTO   37D
036A:  MOVF   2C,W
036B:  SUBWF  2E,W
036C:  MOVWF  3A
036D:  MOVF   2F,W
036E:  MOVWF  3B
036F:  MOVF   2D,W
0370:  BTFSS  03.0
0371:  INCFSZ 2D,W
0372:  SUBWF  3B,F
0373:  MOVF   3B,W
0374:  SUBLW  01
0375:  BTFSS  03.0
0376:  GOTO   37F
0377:  BTFSS  03.2
0378:  GOTO   37D
0379:  MOVF   3A,W
037A:  SUBLW  2B
037B:  BTFSS  03.0
037C:  GOTO   37F
....................       { 
....................          motor2_p = 0; 
037D:  BCF    06.2
....................          motor2_n = 0; 
037E:  BCF    06.3
....................       } 
....................  
....................  
....................       if(((value5)+50) > (value6)) 
037F:  MOVLW  32
0380:  ADDWF  30,W
0381:  MOVWF  38
0382:  MOVF   31,W
0383:  MOVWF  39
0384:  BTFSC  03.0
0385:  INCF   39,F
0386:  MOVF   33,W
0387:  SUBWF  39,W
0388:  BTFSS  03.0
0389:  GOTO   392
038A:  BTFSS  03.2
038B:  GOTO   390
038C:  MOVF   38,W
038D:  SUBWF  32,W
038E:  BTFSC  03.0
038F:  GOTO   392
....................       { 
....................          relay1=1; 
0390:  BSF    06.4
....................          relay2=0; 
0391:  BCF    06.5
....................       } 
....................  
....................  
....................       if(((value6)+50) > (value5)) 
0392:  MOVLW  32
0393:  ADDWF  32,W
0394:  MOVWF  38
0395:  MOVF   33,W
0396:  MOVWF  39
0397:  BTFSC  03.0
0398:  INCF   39,F
0399:  MOVF   31,W
039A:  SUBWF  39,W
039B:  BTFSS  03.0
039C:  GOTO   3A5
039D:  BTFSS  03.2
039E:  GOTO   3A3
039F:  MOVF   38,W
03A0:  SUBWF  30,W
03A1:  BTFSC  03.0
03A2:  GOTO   3A5
....................       { 
....................          relay1=0; 
03A3:  BCF    06.4
....................          relay2=1; 
03A4:  BSF    06.5
....................       } 
....................  
....................    } 
03A5:  GOTO   1AC
....................  
.................... } 
....................  
....................  
.................... void display(unsigned int16 n) 
.................... { 
03A6:  SLEEP
....................    int i = 0; 
*
00E3:  CLRF   3A
....................    int a[4]; 
....................  
....................    for(i=0;i<=3;i++) 
00E4:  CLRF   3A
00E5:  MOVF   3A,W
00E6:  SUBLW  03
00E7:  BTFSS  03.0
00E8:  GOTO   104
....................    { 
....................       a[i]=n%10; 
00E9:  MOVLW  3B
00EA:  ADDWF  3A,W
00EB:  MOVWF  04
00EC:  MOVF   39,W
00ED:  MOVWF  41
00EE:  MOVF   38,W
00EF:  MOVWF  40
00F0:  CLRF   43
00F1:  MOVLW  0A
00F2:  MOVWF  42
00F3:  CALL   0BD
00F4:  MOVF   77,W
00F5:  MOVWF  00
....................       n=n/10; 
00F6:  MOVF   39,W
00F7:  MOVWF  41
00F8:  MOVF   38,W
00F9:  MOVWF  40
00FA:  CLRF   43
00FB:  MOVLW  0A
00FC:  MOVWF  42
00FD:  CALL   0BD
00FE:  MOVF   79,W
00FF:  MOVWF  39
0100:  MOVF   78,W
0101:  MOVWF  38
....................    } 
0102:  INCF   3A,F
0103:  GOTO   0E5
....................  
....................    data(a[3]|0x30); 
0104:  MOVF   3E,W
0105:  IORLW  30
0106:  MOVWF  3F
0107:  MOVWF  40
0108:  CALL   0B3
....................    data(a[2]|0x30); 
0109:  MOVF   3D,W
010A:  IORLW  30
010B:  MOVWF  3F
010C:  MOVWF  40
010D:  CALL   0B3
....................    data(a[1]|0x30); 
010E:  MOVF   3C,W
010F:  IORLW  30
0110:  MOVWF  3F
0111:  MOVWF  40
0112:  CALL   0B3
....................    data(a[0]|0x30); 
0113:  MOVF   3B,W
0114:  IORLW  30
0115:  MOVWF  3F
0116:  MOVWF  40
0117:  CALL   0B3
....................     
....................    if(z==1) 
0118:  DECFSZ 37,W
0119:  GOTO   134
....................    { 
....................    command(0x8c); 
011A:  MOVLW  8C
011B:  MOVWF  3F
011C:  CALL   0A9
....................    data("."); 
011D:  CLRF   3F
011E:  MOVF   3F,W
011F:  CALL   084
0120:  IORLW  00
0121:  BTFSC  03.2
0122:  GOTO   127
0123:  INCF   3F,F
0124:  MOVWF  40
0125:  CALL   0B3
0126:  GOTO   11E
....................    command(0xcc); 
0127:  MOVLW  CC
0128:  MOVWF  3F
0129:  CALL   0A9
....................    data("."); 
012A:  CLRF   3F
012B:  MOVF   3F,W
012C:  CALL   084
012D:  IORLW  00
012E:  BTFSC  03.2
012F:  GOTO   134
0130:  INCF   3F,F
0131:  MOVWF  40
0132:  CALL   0B3
0133:  GOTO   12B
....................    } 
....................    //data(' '); 
....................    delay_ms(100); 
0134:  MOVLW  64
0135:  MOVWF  41
0136:  CALL   096
.................... } 
0137:  RETLW  00
....................  

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
