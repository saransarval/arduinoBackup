CCS PCM C Compiler, Version 3.249, 33340               08-Oct-13 20:06

               Filename: H:\ROBO KIT(pic16f876a)\ALL_TEST.lst

               ROM used: 201 words (2%)
                         Largest free fragment is 2048
               RAM used: 7 (4%) at main() level
                         9 (5%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   059
0003:  NOP
.................... #INCLUDE<16F876A.H> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #USE DELAY(CLOCK=11059200) 
0022:  MOVLW  23
0023:  MOVWF  04
0024:  MOVF   00,W
0025:  BTFSC  03.2
0026:  GOTO   034
0027:  MOVLW  03
0028:  MOVWF  78
0029:  CLRF   77
002A:  DECFSZ 77,F
002B:  GOTO   02A
002C:  DECFSZ 78,F
002D:  GOTO   029
002E:  MOVLW  95
002F:  MOVWF  77
0030:  DECFSZ 77,F
0031:  GOTO   030
0032:  DECFSZ 00,F
0033:  GOTO   027
0034:  RETLW  00
....................  
.................... #BYTE TRISA=0X85 
.................... #BYTE TRISB=0X86 
.................... #BYTE TRISC=0X87 
....................  
.................... #BYTE PORTA=0X05 
.................... #BYTE PORTB=0X06 
.................... #BYTE PORTC=0X07 
....................  
.................... #BYTE OPTION_REG=0X81 
.................... #byte intcon=0x0b 
....................  
....................  
.................... #BIT REG=PORTc.4 
.................... #BIT E=PORTc.5 
....................  
.................... #BIT LED=PORTB.0 
.................... #BIT BUZ=PORTB.3 
.................... #BIT KEY1=PORTB.1 
.................... #BIT KEY2=PORTB.2 
....................  
.................... #BIT IR1=PORTB.6 
.................... #BIT IR2=PORTB.5 
....................  
.................... #BIT OBJ_DET=PORTB.7 
....................  
.................... #BIT MOT1=PORTA.1 
.................... #BIT MOT2=PORTA.3 
....................  
....................  
.................... void command(unsigned int com) 
.................... { 
....................  
.................... 	portc=com>>4; 
0035:  SWAPF  21,W
0036:  MOVWF  07
0037:  MOVLW  0F
0038:  ANDWF  07,F
.................... 	//REG=0; 
.................... 	E=1; 
0039:  BSF    07.5
.................... 	delay_MS(5); 
003A:  MOVLW  05
003B:  MOVWF  23
003C:  CALL   022
.................... 	E=0; 
003D:  BCF    07.5
....................  
.................... 	PORTC=com; 
003E:  MOVF   21,W
003F:  MOVWF  07
.................... 	REG=0; 
0040:  BCF    07.4
.................... 	E=1; 
0041:  BSF    07.5
.................... 	delay_MS(5); 
0042:  MOVLW  05
0043:  MOVWF  23
0044:  CALL   022
.................... 	E=0; 
0045:  BCF    07.5
....................  
....................  
....................  
.................... } 
0046:  RETLW  00
....................  
.................... void data(unsigned int da) 
.................... { 
....................  
.................... 	portc=da>>4; 
0047:  SWAPF  22,W
0048:  MOVWF  07
0049:  MOVLW  0F
004A:  ANDWF  07,F
.................... 	//REG=1; 
.................... 	E=1; 
004B:  BSF    07.5
.................... 	delay_MS(5); 
004C:  MOVLW  05
004D:  MOVWF  23
004E:  CALL   022
.................... 	E=0; 
004F:  BCF    07.5
....................  
.................... 	PORTC=da; 
0050:  MOVF   22,W
0051:  MOVWF  07
.................... 	REG=1; 
0052:  BSF    07.4
.................... 	E=1; 
0053:  BSF    07.5
.................... 	delay_MS(5); 
0054:  MOVLW  05
0055:  MOVWF  23
0056:  CALL   022
.................... 	E=0; 
0057:  BCF    07.5
....................  
.................... } 
0058:  RETLW  00
.................... int1 slag1=0,slag2=0,always=0,OBJ=0; 
*
0063:  BCF    03.5
0064:  BCF    20.0
0065:  BCF    20.1
0066:  BCF    20.2
0067:  BCF    20.3
.................... /* 
.................... #INT_RB 
.................... PORT_CHANGE_INT() 
.................... { 
....................  
....................  
....................    IF(OBJ_DET==0) 
....................    { 
....................       OBJ=1; 
....................    } 
....................  
....................    always=0; 
.................... } 
.................... */ 
....................  
.................... VOID MAIN() 
.................... { 
*
0059:  CLRF   04
005A:  MOVLW  1F
005B:  ANDWF  03,F
005C:  BSF    03.5
005D:  BSF    1F.0
005E:  BSF    1F.1
005F:  BSF    1F.2
0060:  BCF    1F.3
0061:  MOVLW  07
0062:  MOVWF  1C
....................    TRISA=0X00; 
*
0068:  BSF    03.5
0069:  CLRF   05
....................    TRISB=0Xf6; 
006A:  MOVLW  F6
006B:  MOVWF  06
....................    TRISC=0X00; 
006C:  CLRF   07
....................  
....................    PORTA=0X00; 
006D:  BCF    03.5
006E:  CLRF   05
....................    PORTB=0X00; 
006F:  CLRF   06
....................    PORTC=0X00; 
0070:  CLRF   07
....................  
....................    OPTION_REG=0X00; 
0071:  BSF    03.5
0072:  CLRF   01
....................    INTCON=0X88; 
0073:  MOVLW  88
0074:  BCF    03.5
0075:  MOVWF  0B
....................  
....................    COMMAND(0X02); 
0076:  MOVLW  02
0077:  MOVWF  21
0078:  CALL   035
....................    command(0x28); // set function 4 bit, 2 line, 5*7 
0079:  MOVLW  28
007A:  MOVWF  21
007B:  CALL   035
....................    command(0x06); // entry mode  3bit high,   increment cursor move direction, display shift 
007C:  MOVLW  06
007D:  MOVWF  21
007E:  CALL   035
....................    command(0x0c); // display on  4 bit high, display on, no curson, no blinking 
007F:  MOVLW  0C
0080:  MOVWF  21
0081:  CALL   035
....................    command(0x01); // clear 
0082:  MOVLW  01
0083:  MOVWF  21
0084:  CALL   035
....................  
....................    DELAY_MS(100); 
0085:  MOVLW  64
0086:  MOVWF  23
0087:  CALL   022
....................    command(0x80);DELAY_MS(1); 
0088:  MOVLW  80
0089:  MOVWF  21
008A:  CALL   035
008B:  MOVLW  01
008C:  MOVWF  23
008D:  CALL   022
....................    data("GRT WELCOMES "); 
008E:  CLRF   21
008F:  MOVF   21,W
0090:  CALL   004
0091:  IORLW  00
0092:  BTFSC  03.2
0093:  GOTO   098
0094:  INCF   21,F
0095:  MOVWF  22
0096:  CALL   047
0097:  GOTO   08F
....................    COMMAND(0XC0);DELAY_MS(1); 
0098:  MOVLW  C0
0099:  MOVWF  21
009A:  CALL   035
009B:  MOVLW  01
009C:  MOVWF  23
009D:  CALL   022
....................    DATA("YOU ALL"); 
009E:  CLRF   21
009F:  MOVF   21,W
00A0:  CALL   016
00A1:  IORLW  00
00A2:  BTFSC  03.2
00A3:  GOTO   0A8
00A4:  INCF   21,F
00A5:  MOVWF  22
00A6:  CALL   047
00A7:  GOTO   09F
....................    delay_ms(1000); 
00A8:  MOVLW  04
00A9:  MOVWF  21
00AA:  MOVLW  FA
00AB:  MOVWF  23
00AC:  CALL   022
00AD:  DECFSZ 21,F
00AE:  GOTO   0AA
.................... 	always=1; 
00AF:  BSF    20.2
....................   // MOT1=1;DELAY_MS(3000);MOT1=0;led=1; 
....................   // MOT2=1;DELAY_MS(3000);MOT2=0;led=0; 
....................  
....................    WHILE(1) 
....................    { 
....................  
.................... 		always=1; 
00B0:  BSF    20.2
....................  
....................       IF(OBJ_DET==1) 
00B1:  BTFSS  06.7
00B2:  GOTO   0C2
....................       { 
....................       MOT1=0;MOT2=0;LED=1;BUZ=1;DELAY_MS(1000);LED=0;BUZ=0;ALWAYS=0;OBJ=0; 
00B3:  BCF    05.1
00B4:  BCF    05.3
00B5:  BSF    06.0
00B6:  BSF    06.3
00B7:  MOVLW  04
00B8:  MOVWF  21
00B9:  MOVLW  FA
00BA:  MOVWF  23
00BB:  CALL   022
00BC:  DECFSZ 21,F
00BD:  GOTO   0B9
00BE:  BCF    06.0
00BF:  BCF    06.3
00C0:  BCF    20.2
00C1:  BCF    20.3
....................       } 
....................           
....................  
....................  
.................... 		if(always==1) 
00C2:  BTFSS  20.2
00C3:  GOTO   0C7
.................... 		{ 
.................... 		MOT1=1;MOT2=1;OBJ=0; 
00C4:  BSF    05.1
00C5:  BSF    05.3
00C6:  BCF    20.3
.................... 		} 
....................  
....................  
....................    } 
00C7:  GOTO   0B0
.................... } 
....................  
00C8:  SLEEP
