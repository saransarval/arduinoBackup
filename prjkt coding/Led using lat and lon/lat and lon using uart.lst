CCS PCM C Compiler, Version 3.249, 33340               29-Oct-13 12:19

               Filename: \\GRT-EMBEDDED-PC\Users\Public\GRT SHARE_DOC\2013 Projects Programs\Ganesh_tr\Led using lat and lon\lat and lon using uart.lst

               ROM used: 127 words (2%)
                         Largest free fragment is 2048
               RAM used: 24 (14%) at main() level
                         25 (14%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   047
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.5
001C:  GOTO   01F
001D:  BTFSC  0C.5
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   035
.................... #include<16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use delay(clock=11059200) 
.................... #use rs232(baud=9600,parity=N,xmit=pin_C6,rcv=pin_C7) 
....................  
.................... #byte portd=0x08 
.................... #byte trisd=0x88 
....................  
.................... #byte portb=0x06 
.................... #byte trisb=0x86 
....................  
.................... #byte pir1=0x0c 
.................... #byte pie1=0x8c 
.................... #byte rcsta=0x18 
.................... #byte rcreg=0x1a 
.................... #byte spbeg=0x99 
.................... #byte option_reg=0x81 
.................... #byte intcon=0x0b 
....................  
.................... int a[6]={0,0,0,0,0,0},i=0,longi=0,lat=0; 
*
0059:  BCF    03.5
005A:  CLRF   28
005B:  CLRF   29
005C:  CLRF   2A
005D:  CLRF   2B
005E:  CLRF   2C
005F:  CLRF   2D
0060:  CLRF   2E
0061:  CLRF   2F
0062:  CLRF   30
.................... int1 flag=0; 
0063:  BCF    31.0
....................  
.................... #int_rda 
.................... rda_isr() 
.................... { 
.................... a[i]=fgetc(); 
*
0035:  MOVLW  28
0036:  ADDWF  2E,W
0037:  MOVWF  04
0038:  BTFSS  0C.5
0039:  GOTO   038
003A:  MOVF   1A,W
003B:  MOVWF  00
.................... i++; 
003C:  INCF   2E,F
.................... if(i==5) 
003D:  MOVF   2E,W
003E:  SUBLW  05
003F:  BTFSS  03.2
0040:  GOTO   043
.................... { 
.................... i=0; 
0041:  CLRF   2E
.................... flag=1; 
0042:  BSF    31.0
.................... } 
.................... } 
....................  
0043:  BCF    0C.5
0044:  BCF    0A.3
0045:  BCF    0A.4
0046:  GOTO   01F
.................... void main() 
.................... { 
0047:  CLRF   04
0048:  MOVLW  1F
0049:  ANDWF  03,F
004A:  MOVLW  11
004B:  BSF    03.5
004C:  MOVWF  19
004D:  MOVLW  22
004E:  MOVWF  18
004F:  MOVLW  90
0050:  BCF    03.5
0051:  MOVWF  18
0052:  BSF    03.5
0053:  BSF    1F.0
0054:  BSF    1F.1
0055:  BSF    1F.2
0056:  BCF    1F.3
0057:  MOVLW  07
0058:  MOVWF  1C
.................... portd=0x00;portb=0x00; 
*
0064:  CLRF   08
0065:  CLRF   06
.................... trisd=0x00;trisb=0x00; 
0066:  BSF    03.5
0067:  CLRF   08
0068:  CLRF   06
....................  
.................... pir1=0x00; 
0069:  BCF    03.5
006A:  CLRF   0C
.................... pie1=0x20; 
006B:  MOVLW  20
006C:  BSF    03.5
006D:  MOVWF  0C
....................  
.................... rcsta=0x90; 
006E:  MOVLW  90
006F:  BCF    03.5
0070:  MOVWF  18
.................... rcreg=0x00; 
0071:  CLRF   1A
....................  
.................... intcon=0xe0; 
0072:  MOVLW  E0
0073:  MOVWF  0B
.................... option_reg=0x00; 
0074:  BSF    03.5
0075:  CLRF   01
....................  
.................... while(1) 
.................... { 
.................... if(flag==1) 
0076:  BCF    03.5
0077:  BTFSS  31.0
0078:  GOTO   07C
.................... { 
.................... flag=0; 
0079:  BCF    31.0
.................... portd=0xff; 
007A:  MOVLW  FF
007B:  MOVWF  08
.................... /*longi=10; 
.................... lat=15; 
.................... if(longi==10 && lat==15) 
.................... { 
.................... portd=0xff; 
.................... }*/ 
.................... } 
.................... } 
007C:  BSF    03.5
007D:  GOTO   076
.................... } 
....................  
....................  
....................  
007E:  SLEEP
