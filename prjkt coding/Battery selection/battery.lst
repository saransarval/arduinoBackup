CCS PCM C Compiler, Version 3.249, 33340               02-Apr-14 11:37

               Filename: E:\Ganesh Potti\Ganesh Projects\Engineers Projects\Battery selection\battery.lst

               ROM used: 1594 words (19%)
                         Largest free fragment is 2048
               RAM used: 29 (17%) at main() level
                         42 (24%) worst case
               Stack:    4 worst case (3 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   324
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.3
001A:  GOTO   01D
001B:  BTFSC  0B.0
001C:  GOTO   034
001D:  BTFSS  0B.5
001E:  GOTO   021
001F:  BTFSC  0B.2
0020:  GOTO   037
0021:  MOVF   22,W
0022:  MOVWF  04
0023:  MOVF   23,W
0024:  MOVWF  77
0025:  MOVF   24,W
0026:  MOVWF  78
0027:  MOVF   25,W
0028:  MOVWF  79
0029:  MOVF   26,W
002A:  MOVWF  7A
002B:  MOVF   27,W
002C:  MOVWF  7B
002D:  MOVF   20,W
002E:  MOVWF  0A
002F:  SWAPF  21,W
0030:  MOVWF  03
0031:  SWAPF  7F,F
0032:  SWAPF  7F,W
0033:  RETFIE
0034:  BCF    0A.3
0035:  BCF    0A.4
0036:  GOTO   136
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   146
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=10 
.................... #use delay(clock=11059200) 
*
0162:  MOVLW  40
0163:  MOVWF  04
0164:  MOVF   00,W
0165:  BTFSC  03.2
0166:  GOTO   174
0167:  MOVLW  03
0168:  MOVWF  78
0169:  CLRF   77
016A:  DECFSZ 77,F
016B:  GOTO   16A
016C:  DECFSZ 78,F
016D:  GOTO   169
016E:  MOVLW  95
016F:  MOVWF  77
0170:  DECFSZ 77,F
0171:  GOTO   170
0172:  DECFSZ 00,F
0173:  GOTO   167
0174:  RETLW  00
.................... #fuses NOWDT,HS, PUT, NOPROTECT,NOBROWNOUT, NOLVP, NOCPD, NOWRT 
....................  
.................... #byte porta=0x05 
.................... #byte trisa=0x85 
....................  
.................... #byte trisb=0x86 
.................... #byte portb=0x06 
....................  
.................... #byte trisd=0x88 
.................... #byte portd=0x08 
....................  
.................... #byte trisc=0x87 
.................... #byte portc=0x07 
....................  
.................... #byte trise=0x89 
.................... #byte porte=0x09 
....................  
.................... #byte tmr0=0x01 
.................... #byte intcon=0x0b 
.................... #byte option_reg=0x81 
.................... #byte rcreg=0x1a 
....................  
.................... #byte adcon0=0x1f 
.................... #byte adcon1=0x9f 
....................  
.................... #byte adresh=0x1e 
.................... #byte adresl=0x9e 
.................... #byte pir1=0x0c 
....................  
.................... #bit go=0x1f.2 
....................  
.................... #bit tmr0ie=intcon.5 
.................... #bit rbie=intcon.3 
....................  
.................... #bit reg=porte.0 
.................... #bit rw=porte.1 
.................... #bit en=porte.2 
....................  
.................... #bit key1=portb.1 
.................... #bit key2=portb.2 
.................... #bit key3=portb.3 
.................... #bit s1=portb.4 
.................... #bit s2=portb.5 
.................... #bit s3=portb.6 
.................... #bit s4=portb.7 
....................  
.................... #bit relay1=portc.0 
....................  
.................... #define VOLTAGE 820 
....................  
.................... int1 flag=0 , battery_1_flag = 0 , battery_2_flag = 0, relay1_flag=0; 
*
032E:  BCF    03.5
032F:  BCF    28.0
0330:  BCF    28.1
0331:  BCF    28.2
0332:  BCF    28.3
.................... void display_sec(unsigned int s); 
.................... void display_mint(unsigned int m); 
.................... void display_hours(unsigned int h); 
.................... void display_enter_sec(unsigned int s); 
.................... void display_enter_mint(unsigned int m); 
.................... void display_enter_hours(unsigned int h); 
.................... void display(unsigned int16 n); 
.................... int b=0,sec=0,mint=0,hours=0 , enter_sec=0, enter_mint=0, enter_hours=0, enter_sec_1=0, enter_mint_1=0, enter_hours_1=0,x=1,y=1; 
0333:  CLRF   29
0334:  CLRF   2A
0335:  CLRF   2B
0336:  CLRF   2C
0337:  CLRF   2D
0338:  CLRF   2E
0339:  CLRF   2F
033A:  CLRF   30
033B:  CLRF   31
033C:  CLRF   32
033D:  MOVLW  01
033E:  MOVWF  33
033F:  MOVWF  34
.................... unsigned int16  Battery_1 = 0; 
0340:  CLRF   35
0341:  CLRF   36
....................  
.................... #int_rb 
.................... rb_isr() 
.................... { 
....................    if(s1==0) 
*
0136:  BTFSC  06.4
0137:  GOTO   139
....................    { 
....................       enter_sec++; 
0138:  INCF   2D,F
....................       } 
....................          if(s2==0) 
0139:  BTFSC  06.5
013A:  GOTO   13C
....................          { 
....................             enter_mint++; 
013B:  INCF   2E,F
....................             } 
....................                if(s3==0) 
013C:  BTFSC  06.6
013D:  GOTO   13F
....................                { 
....................                   enter_hours++; 
013E:  INCF   2F,F
....................                   } 
....................                         if(s4==0) 
013F:  BTFSC  06.7
0140:  GOTO   142
....................                         { 
....................                            flag=1; 
0141:  BSF    28.0
....................  
....................                            } 
.................... } 
....................  
0142:  BCF    0B.0
0143:  BCF    0A.3
0144:  BCF    0A.4
0145:  GOTO   021
.................... #int_timer0 
.................... timer0_isr() 
.................... { 
.................... b++; 
0146:  INCF   29,F
....................    if(b>=43) 
0147:  MOVF   29,W
0148:  SUBLW  2A
0149:  BTFSC  03.0
014A:  GOTO   15E
....................    { 
....................       b=0; 
014B:  CLRF   29
....................       sec++; 
014C:  INCF   2A,F
....................          if(sec>=60) 
014D:  MOVF   2A,W
014E:  SUBLW  3B
014F:  BTFSC  03.0
0150:  GOTO   153
....................          { 
....................             sec=0; 
0151:  CLRF   2A
....................             mint++; 
0152:  INCF   2B,F
....................              } 
....................               if(mint>=60) 
0153:  MOVF   2B,W
0154:  SUBLW  3B
0155:  BTFSC  03.0
0156:  GOTO   159
....................                   { 
....................                      mint=0; 
0157:  CLRF   2B
....................                      hours++; 
0158:  INCF   2C,F
....................                        } 
....................                         if(hours>=12) 
0159:  MOVF   2C,W
015A:  SUBLW  0B
015B:  BTFSC  03.0
015C:  GOTO   15E
....................                           { 
....................                               hours=0; 
015D:  CLRF   2C
....................                                } 
....................     } 
.................... } 
....................  
015E:  BCF    0B.2
015F:  BCF    0A.3
0160:  BCF    0A.4
0161:  GOTO   021
.................... void command(unsigned int com) 
.................... { 
....................       portd=com; 
*
0175:  MOVF   3B,W
0176:  MOVWF  08
....................       reg=0; 
0177:  BCF    09.0
....................       rw=0; 
0178:  BCF    09.1
....................       en=1; 
0179:  BSF    09.2
....................       delay_ms(1); 
017A:  MOVLW  01
017B:  MOVWF  40
017C:  CALL   162
....................       en=0; 
017D:  BCF    09.2
.................... } 
017E:  RETLW  00
.................... void data(unsigned int dat) 
.................... { 
....................       portd=dat; 
017F:  MOVF   3F,W
0180:  MOVWF  08
....................       reg=1; 
0181:  BSF    09.0
....................       rw=0; 
0182:  BCF    09.1
....................       en=1; 
0183:  BSF    09.2
....................       delay_ms(1); 
0184:  MOVLW  01
0185:  MOVWF  40
0186:  CALL   162
....................       en=0; 
0187:  BCF    09.2
.................... } 
0188:  RETLW  00
....................  
.................... void main() 
.................... { 
*
0324:  CLRF   04
0325:  MOVLW  1F
0326:  ANDWF  03,F
0327:  BSF    03.5
0328:  BSF    1F.0
0329:  BSF    1F.1
032A:  BSF    1F.2
032B:  BCF    1F.3
032C:  MOVLW  07
032D:  MOVWF  1C
....................       porta=0x00; 
*
0342:  CLRF   05
....................       trisa=0x01; 
0343:  MOVLW  01
0344:  BSF    03.5
0345:  MOVWF  05
....................  
....................       trisb=0xfe; 
0346:  MOVLW  FE
0347:  MOVWF  06
....................       portb=0x00; 
0348:  BCF    03.5
0349:  CLRF   06
....................  
....................       trisd=0x00; 
034A:  BSF    03.5
034B:  CLRF   08
....................       portd=0x00; 
034C:  BCF    03.5
034D:  CLRF   08
....................  
....................       trisc=0x00; 
034E:  BSF    03.5
034F:  CLRF   07
....................       portc=0x00; 
0350:  BCF    03.5
0351:  CLRF   07
....................  
....................       trise=0x00; 
0352:  BSF    03.5
0353:  CLRF   09
....................       porte=0x00; 
0354:  BCF    03.5
0355:  CLRF   09
....................  
....................       intcon=0xc8; 
0356:  MOVLW  C8
0357:  MOVWF  0B
....................       option_reg=0x07; 
0358:  MOVLW  07
0359:  BSF    03.5
035A:  MOVWF  01
....................       tmr0=0x00; 
035B:  BCF    03.5
035C:  CLRF   01
....................  
....................       adresh=0x00; 
035D:  CLRF   1E
....................       adresl=0x00; 
035E:  BSF    03.5
035F:  CLRF   1E
....................       adcon1=0x82; 
0360:  MOVLW  82
0361:  MOVWF  1F
....................       adcon0=0x81; 
0362:  MOVLW  81
0363:  BCF    03.5
0364:  MOVWF  1F
....................  
....................       command(0x38); 
0365:  MOVLW  38
0366:  MOVWF  3B
0367:  CALL   175
....................       command(0x0c); 
0368:  MOVLW  0C
0369:  MOVWF  3B
036A:  CALL   175
....................       command(0x06); 
036B:  MOVLW  06
036C:  MOVWF  3B
036D:  CALL   175
....................       command(0x01); 
036E:  MOVLW  01
036F:  MOVWF  3B
0370:  CALL   175
....................  
....................       delay_ms(1); 
0371:  MOVLW  01
0372:  MOVWF  40
0373:  CALL   162
....................       command(0x80); 
0374:  MOVLW  80
0375:  MOVWF  3B
0376:  CALL   175
....................       data("   BATTERY  "); 
0377:  CLRF   37
0378:  MOVF   37,W
0379:  CALL   03A
037A:  IORLW  00
037B:  BTFSC  03.2
037C:  GOTO   381
037D:  INCF   37,F
037E:  MOVWF  3F
037F:  CALL   17F
0380:  GOTO   378
....................       command(0xc0); 
0381:  MOVLW  C0
0382:  MOVWF  3B
0383:  CALL   175
....................       data("   SELETION    "); 
0384:  CLRF   37
0385:  MOVF   37,W
0386:  CALL   04B
0387:  IORLW  00
0388:  BTFSC  03.2
0389:  GOTO   38E
038A:  INCF   37,F
038B:  MOVWF  3F
038C:  CALL   17F
038D:  GOTO   385
....................       delay_ms(1000); 
038E:  MOVLW  04
038F:  MOVWF  37
0390:  MOVLW  FA
0391:  MOVWF  40
0392:  CALL   162
0393:  DECFSZ 37,F
0394:  GOTO   390
....................       command(0x01); 
0395:  MOVLW  01
0396:  MOVWF  3B
0397:  CALL   175
....................       delay_ms(100); 
0398:  MOVLW  64
0399:  MOVWF  40
039A:  CALL   162
....................  
....................       command(0x80); 
039B:  MOVLW  80
039C:  MOVWF  3B
039D:  CALL   175
....................       data("TIME M-KEY.1"); 
039E:  CLRF   37
039F:  MOVF   37,W
03A0:  CALL   05F
03A1:  IORLW  00
03A2:  BTFSC  03.2
03A3:  GOTO   3A8
03A4:  INCF   37,F
03A5:  MOVWF  3F
03A6:  CALL   17F
03A7:  GOTO   39F
....................       command(0xc0); 
03A8:  MOVLW  C0
03A9:  MOVWF  3B
03AA:  CALL   175
....................       data("CAPACITY M-KEY.2"); 
03AB:  CLRF   37
03AC:  MOVF   37,W
03AD:  CALL   070
03AE:  IORLW  00
03AF:  BTFSC  03.2
03B0:  GOTO   3B5
03B1:  INCF   37,F
03B2:  MOVWF  3F
03B3:  CALL   17F
03B4:  GOTO   3AC
....................       delay_ms(100); 
03B5:  MOVLW  64
03B6:  MOVWF  40
03B7:  CALL   162
....................  
.................... while(1) 
.................... { 
....................       delay_ms(10); 
03B8:  MOVLW  0A
03B9:  MOVWF  40
03BA:  CALL   162
....................       go=1; 
03BB:  BSF    1F.2
....................       while(go==1); 
03BC:  BTFSC  1F.2
03BD:  GOTO   3BC
....................       Battery_1=make16(adresh,adresl); 
03BE:  MOVF   1E,W
03BF:  MOVWF  36
03C0:  BSF    03.5
03C1:  MOVF   1E,W
03C2:  BCF    03.5
03C3:  MOVWF  35
....................       Battery_1=(Battery_1/5); 
03C4:  MOVF   36,W
03C5:  MOVWF  40
03C6:  MOVF   35,W
03C7:  MOVWF  3F
03C8:  CLRF   42
03C9:  MOVLW  05
03CA:  MOVWF  41
03CB:  CALL   189
03CC:  MOVF   79,W
03CD:  MOVWF  36
03CE:  MOVF   78,W
03CF:  MOVWF  35
....................       delay_ms(10); 
03D0:  MOVLW  0A
03D1:  MOVWF  40
03D2:  CALL   162
....................  
.................... if((key1==0) && (x==1)) 
03D3:  BTFSC  06.1
03D4:  GOTO   3DE
03D5:  DECFSZ 33,W
03D6:  GOTO   3DE
.................... { 
....................       battery_1_flag = 1; 
03D7:  BSF    28.1
....................       command(0x01); 
03D8:  MOVLW  01
03D9:  MOVWF  3B
03DA:  CALL   175
....................       delay_ms(2); 
03DB:  MOVLW  02
03DC:  MOVWF  40
03DD:  CALL   162
.................... } 
.................... if(battery_1_flag==1) 
03DE:  BTFSS  28.1
03DF:  GOTO   411
.................... { 
....................       x = 0; 
03E0:  CLRF   33
....................       command(0x80); 
03E1:  MOVLW  80
03E2:  MOVWF  3B
03E3:  CALL   175
....................       data("H:M:S::"); 
03E4:  CLRF   37
03E5:  MOVF   37,W
03E6:  CALL   085
03E7:  IORLW  00
03E8:  BTFSC  03.2
03E9:  GOTO   3EE
03EA:  INCF   37,F
03EB:  MOVWF  3F
03EC:  CALL   17F
03ED:  GOTO   3E5
....................       display_sec(sec); 
03EE:  MOVF   2A,W
03EF:  MOVWF  37
03F0:  GOTO   1C4
....................       display_mint(mint); 
03F1:  MOVF   2B,W
03F2:  MOVWF  37
03F3:  GOTO   1EF
....................       display_hours(hours); 
03F4:  MOVF   2C,W
03F5:  MOVWF  37
03F6:  GOTO   224
....................       command(0xc0); 
03F7:  MOVLW  C0
03F8:  MOVWF  3B
03F9:  CALL   175
....................       data("H:M:S::"); 
03FA:  CLRF   37
03FB:  MOVF   37,W
03FC:  CALL   085
03FD:  IORLW  00
03FE:  BTFSC  03.2
03FF:  GOTO   404
0400:  INCF   37,F
0401:  MOVWF  3F
0402:  CALL   17F
0403:  GOTO   3FB
....................       display_enter_sec(enter_sec); 
0404:  MOVF   2D,W
0405:  MOVWF  37
0406:  GOTO   259
....................       display_enter_mint(enter_mint); 
0407:  MOVF   2E,W
0408:  MOVWF  37
0409:  GOTO   284
....................       display_enter_hours(enter_hours); 
040A:  MOVF   2F,W
040B:  MOVWF  37
040C:  GOTO   2B9
....................       delay_ms(100); 
040D:  MOVLW  64
040E:  MOVWF  40
040F:  CALL   162
....................  
....................       rbie = 1; 
0410:  BSF    0B.3
.................... } 
.................... if(flag==0) 
0411:  BTFSC  28.0
0412:  GOTO   42E
.................... { 
....................       if((enter_sec==60) || (enter_mint==60) || (enter_hours==12)) 
0413:  MOVF   2D,W
0414:  SUBLW  3C
0415:  BTFSC  03.2
0416:  GOTO   41F
0417:  MOVF   2E,W
0418:  SUBLW  3C
0419:  BTFSC  03.2
041A:  GOTO   41F
041B:  MOVF   2F,W
041C:  SUBLW  0C
041D:  BTFSS  03.2
041E:  GOTO   42E
....................          { 
....................             if(enter_sec==60) 
041F:  MOVF   2D,W
0420:  SUBLW  3C
0421:  BTFSS  03.2
0422:  GOTO   424
....................                { 
....................                   enter_sec=0; 
0423:  CLRF   2D
....................                    } 
....................                   if(enter_mint==60) 
0424:  MOVF   2E,W
0425:  SUBLW  3C
0426:  BTFSS  03.2
0427:  GOTO   429
....................                      { 
....................                         enter_mint=0; 
0428:  CLRF   2E
....................                           } 
....................                         if(enter_hours==12) 
0429:  MOVF   2F,W
042A:  SUBLW  0C
042B:  BTFSS  03.2
042C:  GOTO   42E
....................                            { 
....................                               enter_hours=0; 
042D:  CLRF   2F
....................                                 } 
....................          } 
.................... } 
.................... if(flag==1) 
042E:  BTFSS  28.0
042F:  GOTO   433
.................... { 
....................       tmr0ie=1; 
0430:  BSF    0B.5
....................       relay1=1; 
0431:  BSF    07.0
....................       relay1_flag=1; 
0432:  BSF    28.3
.................... } 
.................... if((sec==enter_sec) && (mint==enter_mint) && (hours==enter_hours) && (relay1_flag==1)) 
0433:  MOVF   2D,W
0434:  SUBWF  2A,W
0435:  BTFSS  03.2
0436:  GOTO   4DA
0437:  MOVF   2E,W
0438:  SUBWF  2B,W
0439:  BTFSS  03.2
043A:  GOTO   4DA
043B:  MOVF   2F,W
043C:  SUBWF  2C,W
043D:  BTFSS  03.2
043E:  GOTO   4DA
043F:  BTFSS  28.3
0440:  GOTO   4DA
.................... { 
....................       relay1_flag=0; 
0441:  BCF    28.3
....................       flag=0; 
0442:  BCF    28.0
....................       enter_sec=0; 
0443:  CLRF   2D
....................       enter_mint=0; 
0444:  CLRF   2E
....................       enter_hours=0; 
0445:  CLRF   2F
....................       sec=0;mint=0; 
0446:  CLRF   2A
0447:  CLRF   2B
....................       hours=0; 
0448:  CLRF   2C
....................       tmr0ie=0; 
0449:  BCF    0B.5
....................       battery_1_flag=0; 
044A:  BCF    28.1
....................       rbie = 0; 
044B:  BCF    0B.3
....................       command(0x01); 
044C:  MOVLW  01
044D:  MOVWF  3B
044E:  CALL   175
....................       command(0x80); 
044F:  MOVLW  80
0450:  MOVWF  3B
0451:  CALL   175
....................       data("BAT_1:"); 
0452:  CLRF   37
0453:  MOVF   37,W
0454:  CALL   091
0455:  IORLW  00
0456:  BTFSC  03.2
0457:  GOTO   45C
0458:  INCF   37,F
0459:  MOVWF  3F
045A:  CALL   17F
045B:  GOTO   453
....................       display(Battery_1); 
045C:  MOVF   36,W
045D:  MOVWF  38
045E:  MOVF   35,W
045F:  MOVWF  37
0460:  CALL   2EE
....................  
....................       if(Battery_1<=204) 
0461:  MOVF   36,F
0462:  BTFSS  03.2
0463:  GOTO   477
0464:  MOVF   35,W
0465:  SUBLW  CC
0466:  BTFSS  03.0
0467:  GOTO   477
....................       { 
....................       relay1=0; 
0468:  BCF    07.0
....................       command(0xc0); 
0469:  MOVLW  C0
046A:  MOVWF  3B
046B:  CALL   175
....................       data("BAT_1:1V CHARGED"); 
046C:  CLRF   37
046D:  MOVF   37,W
046E:  CALL   09C
046F:  IORLW  00
0470:  BTFSC  03.2
0471:  GOTO   476
0472:  INCF   37,F
0473:  MOVWF  3F
0474:  CALL   17F
0475:  GOTO   46D
....................       } 
....................       else if(Battery_1<=408) 
0476:  GOTO   4DA
0477:  MOVF   36,W
0478:  SUBLW  01
0479:  BTFSS  03.0
047A:  GOTO   490
047B:  BTFSS  03.2
047C:  GOTO   481
047D:  MOVF   35,W
047E:  SUBLW  98
047F:  BTFSS  03.0
0480:  GOTO   490
....................       { 
....................       relay1=0; 
0481:  BCF    07.0
....................       command(0xc0); 
0482:  MOVLW  C0
0483:  MOVWF  3B
0484:  CALL   175
....................       data("BAT_1:2V CHARGED"); 
0485:  CLRF   37
0486:  MOVF   37,W
0487:  CALL   0B1
0488:  IORLW  00
0489:  BTFSC  03.2
048A:  GOTO   48F
048B:  INCF   37,F
048C:  MOVWF  3F
048D:  CALL   17F
048E:  GOTO   486
....................       } 
....................       else if(Battery_1<=612) 
048F:  GOTO   4DA
0490:  MOVF   36,W
0491:  SUBLW  02
0492:  BTFSS  03.0
0493:  GOTO   4A9
0494:  BTFSS  03.2
0495:  GOTO   49A
0496:  MOVF   35,W
0497:  SUBLW  64
0498:  BTFSS  03.0
0499:  GOTO   4A9
....................       { 
....................       relay1=0; 
049A:  BCF    07.0
....................       command(0xc0); 
049B:  MOVLW  C0
049C:  MOVWF  3B
049D:  CALL   175
....................       data("BAT_1:3V CHARGED"); 
049E:  CLRF   37
049F:  MOVF   37,W
04A0:  CALL   0C6
04A1:  IORLW  00
04A2:  BTFSC  03.2
04A3:  GOTO   4A8
04A4:  INCF   37,F
04A5:  MOVWF  3F
04A6:  CALL   17F
04A7:  GOTO   49F
....................       } 
....................       else if(Battery_1<=816) 
04A8:  GOTO   4DA
04A9:  MOVF   36,W
04AA:  SUBLW  03
04AB:  BTFSS  03.0
04AC:  GOTO   4C2
04AD:  BTFSS  03.2
04AE:  GOTO   4B3
04AF:  MOVF   35,W
04B0:  SUBLW  30
04B1:  BTFSS  03.0
04B2:  GOTO   4C2
....................       { 
....................       relay1=0; 
04B3:  BCF    07.0
....................       command(0xc0); 
04B4:  MOVLW  C0
04B5:  MOVWF  3B
04B6:  CALL   175
....................       data("BAT_1:4V CHARGED"); 
04B7:  CLRF   37
04B8:  MOVF   37,W
04B9:  CALL   0DB
04BA:  IORLW  00
04BB:  BTFSC  03.2
04BC:  GOTO   4C1
04BD:  INCF   37,F
04BE:  MOVWF  3F
04BF:  CALL   17F
04C0:  GOTO   4B8
....................       } 
....................       else if(Battery_1<=1020) 
04C1:  GOTO   4DA
04C2:  MOVF   36,W
04C3:  SUBLW  03
04C4:  BTFSS  03.0
04C5:  GOTO   4DA
04C6:  BTFSS  03.2
04C7:  GOTO   4CC
04C8:  MOVF   35,W
04C9:  SUBLW  FC
04CA:  BTFSS  03.0
04CB:  GOTO   4DA
....................       { 
....................       relay1=0; 
04CC:  BCF    07.0
....................       command(0xc0); 
04CD:  MOVLW  C0
04CE:  MOVWF  3B
04CF:  CALL   175
....................       data("BAT_1:5V CHARGED"); 
04D0:  CLRF   37
04D1:  MOVF   37,W
04D2:  CALL   0F0
04D3:  IORLW  00
04D4:  BTFSC  03.2
04D5:  GOTO   4DA
04D6:  INCF   37,F
04D7:  MOVWF  3F
04D8:  CALL   17F
04D9:  GOTO   4D1
....................       } 
.................... } 
.................... if((key2==0) && (y==1)) 
04DA:  BTFSC  06.2
04DB:  GOTO   4DF
04DC:  DECFSZ 34,W
04DD:  GOTO   4DF
.................... { 
....................       battery_2_flag=1; 
04DE:  BSF    28.2
.................... } 
.................... if(battery_2_flag==1) 
04DF:  BTFSS  28.2
04E0:  GOTO   507
.................... { 
....................       relay1=1; 
04E1:  BSF    07.0
....................       y=0; 
04E2:  CLRF   34
....................       command(0x01); 
04E3:  MOVLW  01
04E4:  MOVWF  3B
04E5:  CALL   175
....................       command(0x80); 
04E6:  MOVLW  80
04E7:  MOVWF  3B
04E8:  CALL   175
....................       data("CAPACITY MONITOR"); 
04E9:  CLRF   37
04EA:  MOVF   37,W
04EB:  CALL   108
04EC:  IORLW  00
04ED:  BTFSC  03.2
04EE:  GOTO   4F3
04EF:  INCF   37,F
04F0:  MOVWF  3F
04F1:  CALL   17F
04F2:  GOTO   4EA
....................       command(0xc0); 
04F3:  MOVLW  C0
04F4:  MOVWF  3B
04F5:  CALL   175
....................       data("BAT_1 CHARGING"); 
04F6:  CLRF   37
04F7:  MOVF   37,W
04F8:  CALL   11D
04F9:  IORLW  00
04FA:  BTFSC  03.2
04FB:  GOTO   500
04FC:  INCF   37,F
04FD:  MOVWF  3F
04FE:  CALL   17F
04FF:  GOTO   4F7
....................       delay_ms(500); 
0500:  MOVLW  02
0501:  MOVWF  37
0502:  MOVLW  FA
0503:  MOVWF  40
0504:  CALL   162
0505:  DECFSZ 37,F
0506:  GOTO   502
.................... } 
.................... if(Battery_1>=VOLTAGE) 
0507:  MOVF   36,W
0508:  SUBLW  02
0509:  BTFSC  03.0
050A:  GOTO   5A4
050B:  XORLW  FF
050C:  BTFSS  03.2
050D:  GOTO   512
050E:  MOVF   35,W
050F:  SUBLW  33
0510:  BTFSC  03.0
0511:  GOTO   5A4
.................... { 
....................       relay1=0; 
0512:  BCF    07.0
....................       battery_2_flag=0; 
0513:  BCF    28.2
....................       command(0x01); 
0514:  MOVLW  01
0515:  MOVWF  3B
0516:  CALL   175
....................       command(0x80); 
0517:  MOVLW  80
0518:  MOVWF  3B
0519:  CALL   175
....................       data("BAT_1:"); 
051A:  CLRF   37
051B:  MOVF   37,W
051C:  CALL   091
051D:  IORLW  00
051E:  BTFSC  03.2
051F:  GOTO   524
0520:  INCF   37,F
0521:  MOVWF  3F
0522:  CALL   17F
0523:  GOTO   51B
....................       display(Battery_1); 
0524:  MOVF   36,W
0525:  MOVWF  38
0526:  MOVF   35,W
0527:  MOVWF  37
0528:  CALL   2EE
....................  
....................       if(Battery_1<=204) 
0529:  MOVF   36,F
052A:  BTFSS  03.2
052B:  GOTO   53E
052C:  MOVF   35,W
052D:  SUBLW  CC
052E:  BTFSS  03.0
052F:  GOTO   53E
....................       { 
....................       command(0xc0); 
0530:  MOVLW  C0
0531:  MOVWF  3B
0532:  CALL   175
....................       data("BAT_1:1V CHARGED"); 
0533:  CLRF   37
0534:  MOVF   37,W
0535:  CALL   09C
0536:  IORLW  00
0537:  BTFSC  03.2
0538:  GOTO   53D
0539:  INCF   37,F
053A:  MOVWF  3F
053B:  CALL   17F
053C:  GOTO   534
....................       } 
....................       else if(Battery_1<=408) 
053D:  GOTO   59D
053E:  MOVF   36,W
053F:  SUBLW  01
0540:  BTFSS  03.0
0541:  GOTO   556
0542:  BTFSS  03.2
0543:  GOTO   548
0544:  MOVF   35,W
0545:  SUBLW  98
0546:  BTFSS  03.0
0547:  GOTO   556
....................       { 
....................       command(0xc0); 
0548:  MOVLW  C0
0549:  MOVWF  3B
054A:  CALL   175
....................       data("BAT_1:2V CHARGED"); 
054B:  CLRF   37
054C:  MOVF   37,W
054D:  CALL   0B1
054E:  IORLW  00
054F:  BTFSC  03.2
0550:  GOTO   555
0551:  INCF   37,F
0552:  MOVWF  3F
0553:  CALL   17F
0554:  GOTO   54C
....................       } 
....................       else if(Battery_1<=612) 
0555:  GOTO   59D
0556:  MOVF   36,W
0557:  SUBLW  02
0558:  BTFSS  03.0
0559:  GOTO   56E
055A:  BTFSS  03.2
055B:  GOTO   560
055C:  MOVF   35,W
055D:  SUBLW  64
055E:  BTFSS  03.0
055F:  GOTO   56E
....................       { 
....................       command(0xc0); 
0560:  MOVLW  C0
0561:  MOVWF  3B
0562:  CALL   175
....................       data("BAT_1:3V CHARGED"); 
0563:  CLRF   37
0564:  MOVF   37,W
0565:  CALL   0C6
0566:  IORLW  00
0567:  BTFSC  03.2
0568:  GOTO   56D
0569:  INCF   37,F
056A:  MOVWF  3F
056B:  CALL   17F
056C:  GOTO   564
....................       } 
....................       else if(Battery_1<=816) 
056D:  GOTO   59D
056E:  MOVF   36,W
056F:  SUBLW  03
0570:  BTFSS  03.0
0571:  GOTO   586
0572:  BTFSS  03.2
0573:  GOTO   578
0574:  MOVF   35,W
0575:  SUBLW  30
0576:  BTFSS  03.0
0577:  GOTO   586
....................       { 
....................       command(0xc0); 
0578:  MOVLW  C0
0579:  MOVWF  3B
057A:  CALL   175
....................       data("BAT_1:4V CHARGED"); 
057B:  CLRF   37
057C:  MOVF   37,W
057D:  CALL   0DB
057E:  IORLW  00
057F:  BTFSC  03.2
0580:  GOTO   585
0581:  INCF   37,F
0582:  MOVWF  3F
0583:  CALL   17F
0584:  GOTO   57C
....................       } 
....................       else if(Battery_1<=1020) 
0585:  GOTO   59D
0586:  MOVF   36,W
0587:  SUBLW  03
0588:  BTFSS  03.0
0589:  GOTO   59D
058A:  BTFSS  03.2
058B:  GOTO   590
058C:  MOVF   35,W
058D:  SUBLW  FC
058E:  BTFSS  03.0
058F:  GOTO   59D
....................       { 
....................       command(0xc0); 
0590:  MOVLW  C0
0591:  MOVWF  3B
0592:  CALL   175
....................       data("BAT_1:5V CHARGED"); 
0593:  CLRF   37
0594:  MOVF   37,W
0595:  CALL   0F0
0596:  IORLW  00
0597:  BTFSC  03.2
0598:  GOTO   59D
0599:  INCF   37,F
059A:  MOVWF  3F
059B:  CALL   17F
059C:  GOTO   594
....................       } 
....................       delay_ms(500); 
059D:  MOVLW  02
059E:  MOVWF  37
059F:  MOVLW  FA
05A0:  MOVWF  40
05A1:  CALL   162
05A2:  DECFSZ 37,F
05A3:  GOTO   59F
.................... } 
.................... if(key3==0) 
05A4:  BTFSC  06.3
05A5:  GOTO   638
.................... { 
....................       relay1=0; 
05A6:  BCF    07.0
....................       battery_2_flag=0; 
05A7:  BCF    28.2
....................       command(0x01); 
05A8:  MOVLW  01
05A9:  MOVWF  3B
05AA:  CALL   175
....................       command(0x80); 
05AB:  MOVLW  80
05AC:  MOVWF  3B
05AD:  CALL   175
....................       data("BAT_1:"); 
05AE:  CLRF   37
05AF:  MOVF   37,W
05B0:  CALL   091
05B1:  IORLW  00
05B2:  BTFSC  03.2
05B3:  GOTO   5B8
05B4:  INCF   37,F
05B5:  MOVWF  3F
05B6:  CALL   17F
05B7:  GOTO   5AF
....................       display(Battery_1); 
05B8:  MOVF   36,W
05B9:  MOVWF  38
05BA:  MOVF   35,W
05BB:  MOVWF  37
05BC:  CALL   2EE
....................        
....................       if(Battery_1<=204) 
05BD:  MOVF   36,F
05BE:  BTFSS  03.2
05BF:  GOTO   5D2
05C0:  MOVF   35,W
05C1:  SUBLW  CC
05C2:  BTFSS  03.0
05C3:  GOTO   5D2
....................       { 
....................       command(0xc0); 
05C4:  MOVLW  C0
05C5:  MOVWF  3B
05C6:  CALL   175
....................       data("BAT_1:1V CHARGED"); 
05C7:  CLRF   37
05C8:  MOVF   37,W
05C9:  CALL   09C
05CA:  IORLW  00
05CB:  BTFSC  03.2
05CC:  GOTO   5D1
05CD:  INCF   37,F
05CE:  MOVWF  3F
05CF:  CALL   17F
05D0:  GOTO   5C8
....................       } 
....................       else if(Battery_1<=408) 
05D1:  GOTO   631
05D2:  MOVF   36,W
05D3:  SUBLW  01
05D4:  BTFSS  03.0
05D5:  GOTO   5EA
05D6:  BTFSS  03.2
05D7:  GOTO   5DC
05D8:  MOVF   35,W
05D9:  SUBLW  98
05DA:  BTFSS  03.0
05DB:  GOTO   5EA
....................       { 
....................       command(0xc0); 
05DC:  MOVLW  C0
05DD:  MOVWF  3B
05DE:  CALL   175
....................       data("BAT_1:2V CHARGED"); 
05DF:  CLRF   37
05E0:  MOVF   37,W
05E1:  CALL   0B1
05E2:  IORLW  00
05E3:  BTFSC  03.2
05E4:  GOTO   5E9
05E5:  INCF   37,F
05E6:  MOVWF  3F
05E7:  CALL   17F
05E8:  GOTO   5E0
....................       } 
....................       else if(Battery_1<=612) 
05E9:  GOTO   631
05EA:  MOVF   36,W
05EB:  SUBLW  02
05EC:  BTFSS  03.0
05ED:  GOTO   602
05EE:  BTFSS  03.2
05EF:  GOTO   5F4
05F0:  MOVF   35,W
05F1:  SUBLW  64
05F2:  BTFSS  03.0
05F3:  GOTO   602
....................       { 
....................       command(0xc0); 
05F4:  MOVLW  C0
05F5:  MOVWF  3B
05F6:  CALL   175
....................       data("BAT_1:3V CHARGED"); 
05F7:  CLRF   37
05F8:  MOVF   37,W
05F9:  CALL   0C6
05FA:  IORLW  00
05FB:  BTFSC  03.2
05FC:  GOTO   601
05FD:  INCF   37,F
05FE:  MOVWF  3F
05FF:  CALL   17F
0600:  GOTO   5F8
....................       } 
....................       else if(Battery_1<=816) 
0601:  GOTO   631
0602:  MOVF   36,W
0603:  SUBLW  03
0604:  BTFSS  03.0
0605:  GOTO   61A
0606:  BTFSS  03.2
0607:  GOTO   60C
0608:  MOVF   35,W
0609:  SUBLW  30
060A:  BTFSS  03.0
060B:  GOTO   61A
....................       { 
....................       command(0xc0); 
060C:  MOVLW  C0
060D:  MOVWF  3B
060E:  CALL   175
....................       data("BAT_1:4V CHARGED"); 
060F:  CLRF   37
0610:  MOVF   37,W
0611:  CALL   0DB
0612:  IORLW  00
0613:  BTFSC  03.2
0614:  GOTO   619
0615:  INCF   37,F
0616:  MOVWF  3F
0617:  CALL   17F
0618:  GOTO   610
....................       } 
....................       else if(Battery_1<=1020) 
0619:  GOTO   631
061A:  MOVF   36,W
061B:  SUBLW  03
061C:  BTFSS  03.0
061D:  GOTO   631
061E:  BTFSS  03.2
061F:  GOTO   624
0620:  MOVF   35,W
0621:  SUBLW  FC
0622:  BTFSS  03.0
0623:  GOTO   631
....................       { 
....................       command(0xc0); 
0624:  MOVLW  C0
0625:  MOVWF  3B
0626:  CALL   175
....................       data("BAT_1:5V CHARGED"); 
0627:  CLRF   37
0628:  MOVF   37,W
0629:  CALL   0F0
062A:  IORLW  00
062B:  BTFSC  03.2
062C:  GOTO   631
062D:  INCF   37,F
062E:  MOVWF  3F
062F:  CALL   17F
0630:  GOTO   628
....................       } 
....................       delay_ms(500); 
0631:  MOVLW  02
0632:  MOVWF  37
0633:  MOVLW  FA
0634:  MOVWF  40
0635:  CALL   162
0636:  DECFSZ 37,F
0637:  GOTO   633
.................... } 
.................... } 
0638:  GOTO   3B8
.................... } 
....................  
.................... void display(unsigned int16 n) 
.................... { 
0639:  SLEEP
....................    int i = 0; 
*
02EE:  CLRF   39
....................    int a[4]; 
....................  
....................       for(i=0;i<=3;i++) 
02EF:  CLRF   39
02F0:  MOVF   39,W
02F1:  SUBLW  03
02F2:  BTFSS  03.0
02F3:  GOTO   30F
....................       { 
....................          a[i]=n%10; 
02F4:  MOVLW  3A
02F5:  ADDWF  39,W
02F6:  MOVWF  04
02F7:  MOVF   38,W
02F8:  MOVWF  40
02F9:  MOVF   37,W
02FA:  MOVWF  3F
02FB:  CLRF   42
02FC:  MOVLW  0A
02FD:  MOVWF  41
02FE:  CALL   189
02FF:  MOVF   77,W
0300:  MOVWF  00
....................          n=n/10; 
0301:  MOVF   38,W
0302:  MOVWF  40
0303:  MOVF   37,W
0304:  MOVWF  3F
0305:  CLRF   42
0306:  MOVLW  0A
0307:  MOVWF  41
0308:  CALL   189
0309:  MOVF   79,W
030A:  MOVWF  38
030B:  MOVF   78,W
030C:  MOVWF  37
....................       } 
030D:  INCF   39,F
030E:  GOTO   2F0
....................  
....................          data(a[3]|0x30); 
030F:  MOVF   3D,W
0310:  IORLW  30
0311:  MOVWF  3E
0312:  MOVWF  3F
0313:  CALL   17F
....................          data(a[2]|0x30); 
0314:  MOVF   3C,W
0315:  IORLW  30
0316:  MOVWF  3E
0317:  MOVWF  3F
0318:  CALL   17F
....................          data(a[1]|0x30); 
0319:  MOVF   3B,W
031A:  IORLW  30
031B:  MOVWF  3E
031C:  MOVWF  3F
031D:  CALL   17F
....................          data(a[0]|0x30); 
031E:  MOVF   3A,W
031F:  IORLW  30
0320:  MOVWF  3E
0321:  MOVWF  3F
0322:  CALL   17F
.................... } 
0323:  RETLW  00
....................  
.................... void display_sec(unsigned int s) 
.................... { 
.................... int c,i[2]; 
....................  
....................       for(c=0;c<2;c++) 
*
01C4:  CLRF   38
01C5:  MOVF   38,W
01C6:  SUBLW  01
01C7:  BTFSS  03.0
01C8:  GOTO   1DC
....................       { 
....................          i[c]=s%10; 
01C9:  MOVLW  39
01CA:  ADDWF  38,W
01CB:  MOVWF  04
01CC:  MOVF   37,W
01CD:  MOVWF  3C
01CE:  MOVLW  0A
01CF:  MOVWF  3D
01D0:  CALL   1AF
01D1:  MOVF   77,W
01D2:  MOVWF  00
....................          s=s/10; 
01D3:  MOVF   37,W
01D4:  MOVWF  3C
01D5:  MOVLW  0A
01D6:  MOVWF  3D
01D7:  CALL   1AF
01D8:  MOVF   78,W
01D9:  MOVWF  37
....................       } 
01DA:  INCF   38,F
01DB:  GOTO   1C5
....................          command(0x8e); 
01DC:  MOVLW  8E
01DD:  MOVWF  3B
01DE:  CALL   175
....................          data(i[1]|0x30); 
01DF:  MOVF   3A,W
01E0:  IORLW  30
01E1:  MOVWF  3B
01E2:  MOVWF  3F
01E3:  CALL   17F
....................          data(i[0]|0x30); 
01E4:  MOVF   39,W
01E5:  IORLW  30
01E6:  MOVWF  3B
01E7:  MOVWF  3F
01E8:  CALL   17F
....................          delay_ms(200); 
01E9:  MOVLW  C8
01EA:  MOVWF  40
01EB:  CALL   162
.................... } 
01EC:  BCF    0A.3
01ED:  BCF    0A.4
01EE:  GOTO   3F1 (RETURN)
.................... void display_mint(unsigned int m) 
.................... { 
.................... int c,j[2]; 
....................  
....................       for(c=0;c<2;c++) 
01EF:  CLRF   38
01F0:  MOVF   38,W
01F1:  SUBLW  01
01F2:  BTFSS  03.0
01F3:  GOTO   207
....................       { 
....................          j[c]=m%10; 
01F4:  MOVLW  39
01F5:  ADDWF  38,W
01F6:  MOVWF  04
01F7:  MOVF   37,W
01F8:  MOVWF  3C
01F9:  MOVLW  0A
01FA:  MOVWF  3D
01FB:  CALL   1AF
01FC:  MOVF   77,W
01FD:  MOVWF  00
....................          m=m/10; 
01FE:  MOVF   37,W
01FF:  MOVWF  3C
0200:  MOVLW  0A
0201:  MOVWF  3D
0202:  CALL   1AF
0203:  MOVF   78,W
0204:  MOVWF  37
....................       } 
0205:  INCF   38,F
0206:  GOTO   1F0
....................          command(0x8b); 
0207:  MOVLW  8B
0208:  MOVWF  3B
0209:  CALL   175
....................          data(j[1]|0x30); 
020A:  MOVF   3A,W
020B:  IORLW  30
020C:  MOVWF  3B
020D:  MOVWF  3F
020E:  CALL   17F
....................          data(j[0]|0x30); 
020F:  MOVF   39,W
0210:  IORLW  30
0211:  MOVWF  3B
0212:  MOVWF  3F
0213:  CALL   17F
....................          data(":"); 
0214:  CLRF   3B
0215:  MOVF   3B,W
0216:  CALL   130
0217:  IORLW  00
0218:  BTFSC  03.2
0219:  GOTO   21E
021A:  INCF   3B,F
021B:  MOVWF  3F
021C:  CALL   17F
021D:  GOTO   215
....................          delay_ms(200); 
021E:  MOVLW  C8
021F:  MOVWF  40
0220:  CALL   162
.................... } 
0221:  BCF    0A.3
0222:  BCF    0A.4
0223:  GOTO   3F4 (RETURN)
.................... void display_hours(unsigned int h) 
.................... { 
.................... int c,k[2]; 
....................  
....................       for(c=0;c<2;c++) 
0224:  CLRF   38
0225:  MOVF   38,W
0226:  SUBLW  01
0227:  BTFSS  03.0
0228:  GOTO   23C
....................       { 
....................          k[c]=h%10; 
0229:  MOVLW  39
022A:  ADDWF  38,W
022B:  MOVWF  04
022C:  MOVF   37,W
022D:  MOVWF  3C
022E:  MOVLW  0A
022F:  MOVWF  3D
0230:  CALL   1AF
0231:  MOVF   77,W
0232:  MOVWF  00
....................          h=h/10; 
0233:  MOVF   37,W
0234:  MOVWF  3C
0235:  MOVLW  0A
0236:  MOVWF  3D
0237:  CALL   1AF
0238:  MOVF   78,W
0239:  MOVWF  37
....................       } 
023A:  INCF   38,F
023B:  GOTO   225
....................          command(0x88); 
023C:  MOVLW  88
023D:  MOVWF  3B
023E:  CALL   175
....................          data(k[1]|0x30); 
023F:  MOVF   3A,W
0240:  IORLW  30
0241:  MOVWF  3B
0242:  MOVWF  3F
0243:  CALL   17F
....................          data(k[0]|0x30); 
0244:  MOVF   39,W
0245:  IORLW  30
0246:  MOVWF  3B
0247:  MOVWF  3F
0248:  CALL   17F
....................          data(":"); 
0249:  CLRF   3B
024A:  MOVF   3B,W
024B:  CALL   130
024C:  IORLW  00
024D:  BTFSC  03.2
024E:  GOTO   253
024F:  INCF   3B,F
0250:  MOVWF  3F
0251:  CALL   17F
0252:  GOTO   24A
....................          delay_ms(200); 
0253:  MOVLW  C8
0254:  MOVWF  40
0255:  CALL   162
.................... } 
0256:  BCF    0A.3
0257:  BCF    0A.4
0258:  GOTO   3F7 (RETURN)
.................... void display_enter_sec(unsigned int s) 
.................... { 
.................... int c,i[2]; 
....................  
....................       for(c=0;c<2;c++) 
0259:  CLRF   38
025A:  MOVF   38,W
025B:  SUBLW  01
025C:  BTFSS  03.0
025D:  GOTO   271
....................       { 
....................          i[c]=s%10; 
025E:  MOVLW  39
025F:  ADDWF  38,W
0260:  MOVWF  04
0261:  MOVF   37,W
0262:  MOVWF  3C
0263:  MOVLW  0A
0264:  MOVWF  3D
0265:  CALL   1AF
0266:  MOVF   77,W
0267:  MOVWF  00
....................          s=s/10; 
0268:  MOVF   37,W
0269:  MOVWF  3C
026A:  MOVLW  0A
026B:  MOVWF  3D
026C:  CALL   1AF
026D:  MOVF   78,W
026E:  MOVWF  37
....................       } 
026F:  INCF   38,F
0270:  GOTO   25A
....................          command(0xce); 
0271:  MOVLW  CE
0272:  MOVWF  3B
0273:  CALL   175
....................          data(i[1]|0x30); 
0274:  MOVF   3A,W
0275:  IORLW  30
0276:  MOVWF  3B
0277:  MOVWF  3F
0278:  CALL   17F
....................          data(i[0]|0x30); 
0279:  MOVF   39,W
027A:  IORLW  30
027B:  MOVWF  3B
027C:  MOVWF  3F
027D:  CALL   17F
....................          delay_ms(200); 
027E:  MOVLW  C8
027F:  MOVWF  40
0280:  CALL   162
.................... } 
0281:  BCF    0A.3
0282:  BCF    0A.4
0283:  GOTO   407 (RETURN)
.................... void display_enter_mint(unsigned int m) 
.................... { 
.................... int c,j[2]; 
....................  
....................       for(c=0;c<2;c++) 
0284:  CLRF   38
0285:  MOVF   38,W
0286:  SUBLW  01
0287:  BTFSS  03.0
0288:  GOTO   29C
....................       { 
....................          j[c]=m%10; 
0289:  MOVLW  39
028A:  ADDWF  38,W
028B:  MOVWF  04
028C:  MOVF   37,W
028D:  MOVWF  3C
028E:  MOVLW  0A
028F:  MOVWF  3D
0290:  CALL   1AF
0291:  MOVF   77,W
0292:  MOVWF  00
....................          m=m/10; 
0293:  MOVF   37,W
0294:  MOVWF  3C
0295:  MOVLW  0A
0296:  MOVWF  3D
0297:  CALL   1AF
0298:  MOVF   78,W
0299:  MOVWF  37
....................       } 
029A:  INCF   38,F
029B:  GOTO   285
....................          command(0xcb); 
029C:  MOVLW  CB
029D:  MOVWF  3B
029E:  CALL   175
....................          data(j[1]|0x30); 
029F:  MOVF   3A,W
02A0:  IORLW  30
02A1:  MOVWF  3B
02A2:  MOVWF  3F
02A3:  CALL   17F
....................          data(j[0]|0x30); 
02A4:  MOVF   39,W
02A5:  IORLW  30
02A6:  MOVWF  3B
02A7:  MOVWF  3F
02A8:  CALL   17F
....................          data(":"); 
02A9:  CLRF   3B
02AA:  MOVF   3B,W
02AB:  CALL   130
02AC:  IORLW  00
02AD:  BTFSC  03.2
02AE:  GOTO   2B3
02AF:  INCF   3B,F
02B0:  MOVWF  3F
02B1:  CALL   17F
02B2:  GOTO   2AA
....................          delay_ms(200); 
02B3:  MOVLW  C8
02B4:  MOVWF  40
02B5:  CALL   162
.................... } 
02B6:  BCF    0A.3
02B7:  BCF    0A.4
02B8:  GOTO   40A (RETURN)
.................... void display_enter_hours(unsigned int h) 
.................... { 
.................... int c,k[2]; 
....................  
....................       for(c=0;c<2;c++) 
02B9:  CLRF   38
02BA:  MOVF   38,W
02BB:  SUBLW  01
02BC:  BTFSS  03.0
02BD:  GOTO   2D1
....................       { 
....................          k[c]=h%10; 
02BE:  MOVLW  39
02BF:  ADDWF  38,W
02C0:  MOVWF  04
02C1:  MOVF   37,W
02C2:  MOVWF  3C
02C3:  MOVLW  0A
02C4:  MOVWF  3D
02C5:  CALL   1AF
02C6:  MOVF   77,W
02C7:  MOVWF  00
....................          h=h/10; 
02C8:  MOVF   37,W
02C9:  MOVWF  3C
02CA:  MOVLW  0A
02CB:  MOVWF  3D
02CC:  CALL   1AF
02CD:  MOVF   78,W
02CE:  MOVWF  37
....................       } 
02CF:  INCF   38,F
02D0:  GOTO   2BA
....................          command(0xc8); 
02D1:  MOVLW  C8
02D2:  MOVWF  3B
02D3:  CALL   175
....................          data(k[1]|0x30); 
02D4:  MOVF   3A,W
02D5:  IORLW  30
02D6:  MOVWF  3B
02D7:  MOVWF  3F
02D8:  CALL   17F
....................          data(k[0]|0x30); 
02D9:  MOVF   39,W
02DA:  IORLW  30
02DB:  MOVWF  3B
02DC:  MOVWF  3F
02DD:  CALL   17F
....................          data(":"); 
02DE:  CLRF   3B
02DF:  MOVF   3B,W
02E0:  CALL   130
02E1:  IORLW  00
02E2:  BTFSC  03.2
02E3:  GOTO   2E8
02E4:  INCF   3B,F
02E5:  MOVWF  3F
02E6:  CALL   17F
02E7:  GOTO   2DF
....................          delay_ms(200); 
02E8:  MOVLW  C8
02E9:  MOVWF  40
02EA:  CALL   162
.................... } 
02EB:  BCF    0A.3
02EC:  BCF    0A.4
02ED:  GOTO   40D (RETURN)
....................  
....................  

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
