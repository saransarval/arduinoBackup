CCS PCM C Compiler, Version 3.249, 33340               06-Feb-14 13:29

               Filename: E:\Ganesh Potti\Ganesh Projects\Engineers Projects\ARRAY_LED_DISPALY\array led display.lst

               ROM used: 288 words (4%)
                         Largest free fragment is 2048
               RAM used: 36 (21%) at main() level
                         39 (22%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   09B
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.5
001C:  GOTO   01F
001D:  BTFSC  0C.5
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   062
.................... #include<16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use delay(clock=11059200) 
*
0074:  MOVLW  40
0075:  MOVWF  04
0076:  MOVF   00,W
0077:  BTFSC  03.2
0078:  GOTO   086
0079:  MOVLW  03
007A:  MOVWF  78
007B:  CLRF   77
007C:  DECFSZ 77,F
007D:  GOTO   07C
007E:  DECFSZ 78,F
007F:  GOTO   07B
0080:  MOVLW  95
0081:  MOVWF  77
0082:  DECFSZ 77,F
0083:  GOTO   082
0084:  DECFSZ 00,F
0085:  GOTO   079
0086:  RETLW  00
.................... #use rs232(baud=9600, xmit=PIN_c6,rcv=PIN_c7) 
....................  
.................... #byte trisc=0x87 
.................... #byte portc=0x07 
....................  
.................... #byte portd=0x08 
.................... #byte trisd=0x88 
....................  
.................... #byte porte=0x09 
.................... #byte trise=0x89 
....................  
.................... #bit reg=0x09.0 
.................... #bit rw=0x09.1 
.................... #bit en=0x09.2 
....................  
.................... #byte intcon=0x0b 
.................... #byte option_reg=0x81 
.................... #byte rcreg=0x1a 
....................  
.................... char a[20]; 
.................... int i=0; 
*
00AD:  BCF    03.5
00AE:  CLRF   3C
.................... int1 flag=0,glag=0; 
00AF:  BCF    3D.0
00B0:  BCF    3D.1
....................  
.................... #int_rda 
.................... rda_isr() 
.................... { 
.................... a[i]=fgetC(); 
*
0062:  MOVLW  28
0063:  ADDWF  3C,W
0064:  MOVWF  04
0065:  BTFSS  0C.5
0066:  GOTO   065
0067:  MOVF   1A,W
0068:  MOVWF  00
.................... i++; 
0069:  INCF   3C,F
.................... if(i==6) 
006A:  MOVF   3C,W
006B:  SUBLW  06
006C:  BTFSS  03.2
006D:  GOTO   070
.................... { 
.................... i=0; 
006E:  CLRF   3C
.................... flag=1; 
006F:  BSF    3D.0
.................... } 
.................... } 
0070:  BCF    0C.5
0071:  BCF    0A.3
0072:  BCF    0A.4
0073:  GOTO   01F
.................... void command(unsigned int com) 
.................... { 
.................... portd=com; 
*
0087:  MOVF   3E,W
0088:  MOVWF  08
.................... reg=0; 
0089:  BCF    09.0
.................... rw=0; 
008A:  BCF    09.1
.................... en=1; 
008B:  BSF    09.2
.................... delay_ms(10); 
008C:  MOVLW  0A
008D:  MOVWF  40
008E:  CALL   074
.................... en=0; 
008F:  BCF    09.2
.................... } 
0090:  RETLW  00
....................  
.................... void data(unsigned int da) 
.................... { 
.................... portd=da; 
0091:  MOVF   3F,W
0092:  MOVWF  08
.................... reg=1; 
0093:  BSF    09.0
.................... rw=0; 
0094:  BCF    09.1
.................... en=1; 
0095:  BSF    09.2
.................... delay_ms(10); 
0096:  MOVLW  0A
0097:  MOVWF  40
0098:  CALL   074
.................... en=0; 
0099:  BCF    09.2
.................... } 
009A:  RETLW  00
.................... void main() 
.................... { 
009B:  CLRF   04
009C:  MOVLW  1F
009D:  ANDWF  03,F
009E:  MOVLW  11
009F:  BSF    03.5
00A0:  MOVWF  19
00A1:  MOVLW  22
00A2:  MOVWF  18
00A3:  MOVLW  90
00A4:  BCF    03.5
00A5:  MOVWF  18
00A6:  BSF    03.5
00A7:  BSF    1F.0
00A8:  BSF    1F.1
00A9:  BSF    1F.2
00AA:  BCF    1F.3
00AB:  MOVLW  07
00AC:  MOVWF  1C
....................  portd=0x00;porte=0x00;portc=0x00; 
*
00B1:  CLRF   08
00B2:  CLRF   09
00B3:  CLRF   07
....................  trisd=0x00;trise=0x00;trisc=0x80; 
00B4:  BSF    03.5
00B5:  CLRF   08
00B6:  CLRF   09
00B7:  MOVLW  80
00B8:  MOVWF  07
....................  
....................  command(0x38); 
00B9:  MOVLW  38
00BA:  BCF    03.5
00BB:  MOVWF  3E
00BC:  CALL   087
....................  command(0x06); 
00BD:  MOVLW  06
00BE:  MOVWF  3E
00BF:  CALL   087
....................  command(0x0c); 
00C0:  MOVLW  0C
00C1:  MOVWF  3E
00C2:  CALL   087
....................  command(0x01); 
00C3:  MOVLW  01
00C4:  MOVWF  3E
00C5:  CALL   087
....................  
....................  enable_interrupts(global); 
00C6:  MOVLW  C0
00C7:  IORWF  0B,F
....................  enable_interrupts(int_rda); 
00C8:  BSF    03.5
00C9:  BSF    0C.5
....................  
....................  delay_ms(300); 
00CA:  MOVLW  02
00CB:  BCF    03.5
00CC:  MOVWF  3E
00CD:  MOVLW  96
00CE:  MOVWF  40
00CF:  CALL   074
00D0:  DECFSZ 3E,F
00D1:  GOTO   0CD
....................  command(0x80); 
00D2:  MOVLW  80
00D3:  MOVWF  3E
00D4:  CALL   087
....................  data("GRT EMBEDDED"); 
00D5:  CLRF   3E
00D6:  MOVF   3E,W
00D7:  CALL   035
00D8:  IORLW  00
00D9:  BTFSC  03.2
00DA:  GOTO   0DF
00DB:  INCF   3E,F
00DC:  MOVWF  3F
00DD:  CALL   091
00DE:  GOTO   0D6
....................  command(0xc0); 
00DF:  MOVLW  C0
00E0:  MOVWF  3E
00E1:  CALL   087
....................  data("SOLUTIONS"); 
00E2:  CLRF   3E
00E3:  MOVF   3E,W
00E4:  CALL   046
00E5:  IORLW  00
00E6:  BTFSC  03.2
00E7:  GOTO   0EC
00E8:  INCF   3E,F
00E9:  MOVWF  3F
00EA:  CALL   091
00EB:  GOTO   0E3
....................  delay_ms(1500); 
00EC:  MOVLW  06
00ED:  MOVWF  3E
00EE:  MOVLW  FA
00EF:  MOVWF  40
00F0:  CALL   074
00F1:  DECFSZ 3E,F
00F2:  GOTO   0EE
....................  command(0x01); 
00F3:  MOVLW  01
00F4:  MOVWF  3E
00F5:  CALL   087
....................  
....................  while(1) 
....................  { 
....................  if(flag==1) 
00F6:  BTFSS  3D.0
00F7:  GOTO   11E
....................  { 
....................  if(a[0]=='A' && a[1]=='B' && a[2]=='C' && a[3]=='D' && a[4]=='E' && a[5]=='F') 
00F8:  MOVF   28,W
00F9:  SUBLW  41
00FA:  BTFSS  03.2
00FB:  GOTO   11D
00FC:  MOVF   29,W
00FD:  SUBLW  42
00FE:  BTFSS  03.2
00FF:  GOTO   11D
0100:  MOVF   2A,W
0101:  SUBLW  43
0102:  BTFSS  03.2
0103:  GOTO   11D
0104:  MOVF   2B,W
0105:  SUBLW  44
0106:  BTFSS  03.2
0107:  GOTO   11D
0108:  MOVF   2C,W
0109:  SUBLW  45
010A:  BTFSS  03.2
010B:  GOTO   11D
010C:  MOVF   2D,W
010D:  SUBLW  46
010E:  BTFSS  03.2
010F:  GOTO   11D
....................  { 
....................  command(0x80); 
0110:  MOVLW  80
0111:  MOVWF  3E
0112:  CALL   087
....................  data("LED ARRAY"); 
0113:  CLRF   3E
0114:  MOVF   3E,W
0115:  CALL   054
0116:  IORLW  00
0117:  BTFSC  03.2
0118:  GOTO   11D
0119:  INCF   3E,F
011A:  MOVWF  3F
011B:  CALL   091
011C:  GOTO   114
....................  }flag=0; 
011D:  BCF    3D.0
....................  } 
....................  } 
011E:  GOTO   0F6
.................... } 
011F:  SLEEP
