CCS PCM C Compiler, Version 3.249, 33340               13-Mar-14 17:05

               Filename: E:\Ganesh Potti\Ganesh Projects\Engineers Projects\final simulation\pro.lst

               ROM used: 876 words (11%)
                         Largest free fragment is 2048
               RAM used: 32 (18%) at main() level
                         41 (23%) worst case
               Stack:    4 worst case (3 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   112
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   084
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses NOWDT,HS,PUT, NOPROTECT,BROWNOUT, NOLVP, NOCPD, NOWRT 
.................... #device adc=10 
.................... #use delay(clock=11059200) 
*
008F:  MOVLW  40
0090:  MOVWF  04
0091:  MOVF   00,W
0092:  BTFSC  03.2
0093:  GOTO   0A1
0094:  MOVLW  03
0095:  MOVWF  78
0096:  CLRF   77
0097:  DECFSZ 77,F
0098:  GOTO   097
0099:  DECFSZ 78,F
009A:  GOTO   096
009B:  MOVLW  95
009C:  MOVWF  77
009D:  DECFSZ 77,F
009E:  GOTO   09D
009F:  DECFSZ 00,F
00A0:  GOTO   094
00A1:  RETLW  00
....................  
.................... #byte portb=0x06 
.................... #byte portc=0x07 
.................... #byte portd=0x08 
.................... #byte porte=0x09 
....................  
.................... #byte trisb=0x86 
.................... #byte trisc=0x87 
.................... #byte trisd=0x88 
.................... #byte trise=0x89 
....................  
.................... #bit reg=portb.7 
.................... #bit rw=porte.1 
.................... #bit en=porte.2 
....................  
.................... #bit motor1_p=portb.0 
.................... #bit motor1_n=portb.1 
.................... #bit motor2_p=portb.2 
.................... #bit motor2_n=portb.3 
.................... #bit relay1=portb.4 
.................... #bit relay2=portb.5 
....................  
.................... #bit RELAY3=portc.0 
.................... #bit RELAY4=portc.1 
....................  
.................... unsigned int16 value1=0, value2=0, value3=0, value4=0, value5=0, value6=0; 
*
011C:  BCF    03.5
011D:  CLRF   28
011E:  CLRF   29
011F:  CLRF   2A
0120:  CLRF   2B
0121:  CLRF   2C
0122:  CLRF   2D
0123:  CLRF   2E
0124:  CLRF   2F
0125:  CLRF   30
0126:  CLRF   31
0127:  CLRF   32
0128:  CLRF   33
.................... unsigned char sec = 0, time = 0; 
0129:  CLRF   34
012A:  CLRF   35
.................... int1 flag=0; 
012B:  BCF    36.0
....................  
.................... void display(unsigned int16); 
.................... void command(unsigned char com); 
.................... void data(unsigned char da); 
....................  
.................... void command(unsigned char com){ 
....................    portd=com; 
*
00A2:  MOVF   37,W
00A3:  MOVWF  08
....................    reg=0; 
00A4:  BCF    06.7
....................    rw=0; 
00A5:  BCF    09.1
....................    en=1; 
00A6:  BSF    09.2
....................    delay_ms(1); 
00A7:  MOVLW  01
00A8:  MOVWF  40
00A9:  CALL   08F
....................    en=0; 
00AA:  BCF    09.2
.................... } 
00AB:  RETLW  00
....................  
.................... void data(unsigned char da){ 
....................    portd=da; 
00AC:  MOVF   3F,W
00AD:  MOVWF  08
....................    reg=1; 
00AE:  BSF    06.7
....................    rw=0; 
00AF:  BCF    09.1
....................    en=1; 
00B0:  BSF    09.2
....................    delay_ms(1); 
00B1:  MOVLW  01
00B2:  MOVWF  40
00B3:  CALL   08F
....................    en=0; 
00B4:  BCF    09.2
.................... } 
00B5:  RETLW  00
....................  
.................... #int_TIMER0 
.................... TIMER0_isr() 
.................... { 
....................    time++; 
*
0084:  INCF   35,F
....................    if(time>=43) 
0085:  MOVF   35,W
0086:  SUBLW  2A
0087:  BTFSC  03.0
0088:  GOTO   08B
....................    { 
....................       time=0; 
0089:  CLRF   35
....................       flag=1; 
008A:  BSF    36.0
....................    } 
.................... } 
....................  
008B:  BCF    0B.2
008C:  BCF    0A.3
008D:  BCF    0A.4
008E:  GOTO   01D
.................... void main() 
.................... { 
*
0112:  CLRF   04
0113:  MOVLW  1F
0114:  ANDWF  03,F
0115:  BSF    03.5
0116:  BSF    1F.0
0117:  BSF    1F.1
0118:  BSF    1F.2
0119:  BCF    1F.3
011A:  MOVLW  07
011B:  MOVWF  1C
....................    portd=0x00; 
*
012C:  CLRF   08
....................    porte=0x00; 
012D:  CLRF   09
....................  
....................    trisd=0x00; 
012E:  BSF    03.5
012F:  CLRF   08
....................    trise=0x01; 
0130:  MOVLW  01
0131:  MOVWF  09
....................  
....................    portb=0x00; 
0132:  BCF    03.5
0133:  CLRF   06
....................    trisb=0x00; 
0134:  BSF    03.5
0135:  CLRF   06
....................  
....................    portc=0x00; 
0136:  BCF    03.5
0137:  CLRF   07
....................    trisc=0x00; 
0138:  BSF    03.5
0139:  CLRF   07
....................  
....................    command(0x38); delay_ms(5); 
013A:  MOVLW  38
013B:  BCF    03.5
013C:  MOVWF  37
013D:  CALL   0A2
013E:  MOVLW  05
013F:  MOVWF  40
0140:  CALL   08F
....................    command(0x06); delay_ms(5); 
0141:  MOVLW  06
0142:  MOVWF  37
0143:  CALL   0A2
0144:  MOVLW  05
0145:  MOVWF  40
0146:  CALL   08F
....................    command(0x0c); delay_ms(5); 
0147:  MOVLW  0C
0148:  MOVWF  37
0149:  CALL   0A2
014A:  MOVLW  05
014B:  MOVWF  40
014C:  CALL   08F
....................    command(0x01); delay_ms(5); 
014D:  MOVLW  01
014E:  MOVWF  37
014F:  CALL   0A2
0150:  MOVLW  05
0151:  MOVWF  40
0152:  CALL   08F
....................  
....................    command(0x80); 
0153:  MOVLW  80
0154:  MOVWF  37
0155:  CALL   0A2
....................    data("SOLAR TRACKING"); 
0156:  CLRF   37
0157:  MOVF   37,W
0158:  CALL   033
0159:  IORLW  00
015A:  BTFSC  03.2
015B:  GOTO   160
015C:  INCF   37,F
015D:  MOVWF  3F
015E:  CALL   0AC
015F:  GOTO   157
....................  
....................    set_timer0(0x00); //set TMR0 initial value to zero 
0160:  CLRF   01
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256); //set timer0 mode 
0161:  BSF    03.5
0162:  MOVF   01,W
0163:  ANDLW  C0
0164:  IORLW  07
0165:  MOVWF  01
....................  
....................    enable_interrupts(INT_TIMER0); //enable timer overflow interrupt 
0166:  BCF    03.5
0167:  BSF    0B.5
....................  
....................    enable_interrupts(GLOBAL); //enable global interrupt 
0168:  MOVLW  C0
0169:  IORWF  0B,F
....................  
....................  
....................    setup_adc( ADC_CLOCK_INTERNAL ); 
016A:  BSF    03.5
016B:  BCF    1F.6
016C:  BCF    03.5
016D:  BSF    1F.6
016E:  BSF    1F.7
016F:  BSF    03.5
0170:  BSF    1F.7
0171:  BCF    03.5
0172:  BSF    1F.0
....................    setup_adc_ports(AN0_AN1_AN2_AN3_AN4_AN5); 
0173:  BSF    03.5
0174:  BSF    1F.0
0175:  BCF    1F.1
0176:  BCF    1F.2
0177:  BSF    1F.3
....................  
....................    delay_ms(2000); 
0178:  MOVLW  08
0179:  BCF    03.5
017A:  MOVWF  37
017B:  MOVLW  FA
017C:  MOVWF  40
017D:  CALL   08F
017E:  DECFSZ 37,F
017F:  GOTO   17B
....................    command(0x01); 
0180:  MOVLW  01
0181:  MOVWF  37
0182:  CALL   0A2
....................    delay_ms(2); 
0183:  MOVLW  02
0184:  MOVWF  40
0185:  CALL   08F
....................  
....................  
....................    while(1) 
....................    { 
....................       /*motor3_p=1; 
....................       motor4_p=1; 
....................       motor5_p=1; 
....................       motor6_p=1; 
....................       motor3_n=0; 
....................       motor4_n=0; 
....................       motor5_n=0; 
....................       motor6_n=0;*/ 
....................       RELAY3=1; 
0186:  BSF    07.0
....................       RELAY4=0; 
0187:  BCF    07.1
....................  
....................       set_adc_channel(0); 
0188:  MOVLW  00
0189:  MOVWF  78
018A:  MOVF   1F,W
018B:  ANDLW  C7
018C:  IORWF  78,W
018D:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
018E:  MOVLW  5B
018F:  MOVWF  77
0190:  DECFSZ 77,F
0191:  GOTO   190
0192:  NOP
0193:  NOP
....................       value1=read_adc(); 
0194:  BSF    1F.2
0195:  BTFSC  1F.2
0196:  GOTO   195
0197:  BSF    03.5
0198:  MOVF   1E,W
0199:  BCF    03.5
019A:  MOVWF  28
019B:  MOVF   1E,W
019C:  MOVWF  29
....................       delay_us(4); 
019D:  MOVLW  03
019E:  MOVWF  77
019F:  DECFSZ 77,F
01A0:  GOTO   19F
01A1:  NOP
....................  
....................       set_adc_channel(1); 
01A2:  MOVLW  08
01A3:  MOVWF  78
01A4:  MOVF   1F,W
01A5:  ANDLW  C7
01A6:  IORWF  78,W
01A7:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01A8:  MOVLW  5B
01A9:  MOVWF  77
01AA:  DECFSZ 77,F
01AB:  GOTO   1AA
01AC:  NOP
01AD:  NOP
....................       value2=read_adc(); 
01AE:  BSF    1F.2
01AF:  BTFSC  1F.2
01B0:  GOTO   1AF
01B1:  BSF    03.5
01B2:  MOVF   1E,W
01B3:  BCF    03.5
01B4:  MOVWF  2A
01B5:  MOVF   1E,W
01B6:  MOVWF  2B
....................       delay_us(4); 
01B7:  MOVLW  03
01B8:  MOVWF  77
01B9:  DECFSZ 77,F
01BA:  GOTO   1B9
01BB:  NOP
....................  
....................       set_adc_channel(2); 
01BC:  MOVLW  10
01BD:  MOVWF  78
01BE:  MOVF   1F,W
01BF:  ANDLW  C7
01C0:  IORWF  78,W
01C1:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01C2:  MOVLW  5B
01C3:  MOVWF  77
01C4:  DECFSZ 77,F
01C5:  GOTO   1C4
01C6:  NOP
01C7:  NOP
....................       value3=read_adc(); 
01C8:  BSF    1F.2
01C9:  BTFSC  1F.2
01CA:  GOTO   1C9
01CB:  BSF    03.5
01CC:  MOVF   1E,W
01CD:  BCF    03.5
01CE:  MOVWF  2C
01CF:  MOVF   1E,W
01D0:  MOVWF  2D
....................       delay_us(4); 
01D1:  MOVLW  03
01D2:  MOVWF  77
01D3:  DECFSZ 77,F
01D4:  GOTO   1D3
01D5:  NOP
....................  
....................       set_adc_channel(3); 
01D6:  MOVLW  18
01D7:  MOVWF  78
01D8:  MOVF   1F,W
01D9:  ANDLW  C7
01DA:  IORWF  78,W
01DB:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01DC:  MOVLW  5B
01DD:  MOVWF  77
01DE:  DECFSZ 77,F
01DF:  GOTO   1DE
01E0:  NOP
01E1:  NOP
....................       value4=read_adc(); 
01E2:  BSF    1F.2
01E3:  BTFSC  1F.2
01E4:  GOTO   1E3
01E5:  BSF    03.5
01E6:  MOVF   1E,W
01E7:  BCF    03.5
01E8:  MOVWF  2E
01E9:  MOVF   1E,W
01EA:  MOVWF  2F
....................       delay_us(40); 
01EB:  MOVLW  24
01EC:  MOVWF  77
01ED:  DECFSZ 77,F
01EE:  GOTO   1ED
01EF:  NOP
....................  
....................       set_adc_channel(4); 
01F0:  MOVLW  20
01F1:  MOVWF  78
01F2:  MOVF   1F,W
01F3:  ANDLW  C7
01F4:  IORWF  78,W
01F5:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
01F6:  MOVLW  5B
01F7:  MOVWF  77
01F8:  DECFSZ 77,F
01F9:  GOTO   1F8
01FA:  NOP
01FB:  NOP
....................       value5=read_adc(); 
01FC:  BSF    1F.2
01FD:  BTFSC  1F.2
01FE:  GOTO   1FD
01FF:  BSF    03.5
0200:  MOVF   1E,W
0201:  BCF    03.5
0202:  MOVWF  30
0203:  MOVF   1E,W
0204:  MOVWF  31
....................       delay_us(40); 
0205:  MOVLW  24
0206:  MOVWF  77
0207:  DECFSZ 77,F
0208:  GOTO   207
0209:  NOP
....................  
....................       set_adc_channel(5); 
020A:  MOVLW  28
020B:  MOVWF  78
020C:  MOVF   1F,W
020D:  ANDLW  C7
020E:  IORWF  78,W
020F:  MOVWF  1F
....................       delay_us(100);         //wait for the acquisition time 
0210:  MOVLW  5B
0211:  MOVWF  77
0212:  DECFSZ 77,F
0213:  GOTO   212
0214:  NOP
0215:  NOP
....................       value6=read_adc(); 
0216:  BSF    1F.2
0217:  BTFSC  1F.2
0218:  GOTO   217
0219:  BSF    03.5
021A:  MOVF   1E,W
021B:  BCF    03.5
021C:  MOVWF  32
021D:  MOVF   1E,W
021E:  MOVWF  33
....................       delay_us(40); 
021F:  MOVLW  24
0220:  MOVWF  77
0221:  DECFSZ 77,F
0222:  GOTO   221
0223:  NOP
....................       if(((sec == 0) && (time <= 6)) || ((sec == 6) && (time <= 6))){ 
0224:  MOVF   34,F
0225:  BTFSS  03.2
0226:  GOTO   22B
0227:  MOVF   35,W
0228:  SUBLW  06
0229:  BTFSC  03.0
022A:  GOTO   233
022B:  MOVF   34,W
022C:  SUBLW  06
022D:  BTFSS  03.2
022E:  GOTO   239
022F:  MOVF   35,W
0230:  SUBLW  06
0231:  BTFSS  03.0
0232:  GOTO   239
....................          command(0x01); 
0233:  MOVLW  01
0234:  MOVWF  37
0235:  CALL   0A2
....................          delay_ms(2); 
0236:  MOVLW  02
0237:  MOVWF  40
0238:  CALL   08F
....................       } 
....................       if(flag==1) 
0239:  BTFSS  36.0
023A:  GOTO   241
....................       { 
....................          flag=0; 
023B:  BCF    36.0
....................          sec++; 
023C:  INCF   34,F
....................          if(sec >= 12) 
023D:  MOVF   34,W
023E:  SUBLW  0B
023F:  BTFSS  03.0
....................             sec = 0; 
0240:  CLRF   34
....................       } 
....................       if(sec < 6){ 
0241:  MOVF   34,W
0242:  SUBLW  05
0243:  BTFSS  03.0
0244:  GOTO   290
....................  
....................          /*motor3_n=1; 
....................          motor4_n=1; 
....................          motor5_n=1; 
....................          motor6_n=1; 
....................          motor3_p=0; 
....................          motor4_p=0; 
....................          motor5_p=0; 
....................          motor6_p=0;*/ 
....................          RELAY3=0; 
0245:  BCF    07.0
....................          RELAY4=1;  
0246:  BSF    07.1
....................           
....................          command(0x80); 
0247:  MOVLW  80
0248:  MOVWF  37
0249:  CALL   0A2
....................          data("L1:"); 
024A:  CLRF   37
024B:  MOVF   37,W
024C:  CALL   046
024D:  IORLW  00
024E:  BTFSC  03.2
024F:  GOTO   254
0250:  INCF   37,F
0251:  MOVWF  3F
0252:  CALL   0AC
0253:  GOTO   24B
....................          display(value1); 
0254:  MOVF   29,W
0255:  MOVWF  38
0256:  MOVF   28,W
0257:  MOVWF  37
0258:  CALL   0DC
....................          command(0x88); 
0259:  MOVLW  88
025A:  MOVWF  37
025B:  CALL   0A2
....................          data("L2:"); 
025C:  CLRF   37
025D:  MOVF   37,W
025E:  CALL   04E
025F:  IORLW  00
0260:  BTFSC  03.2
0261:  GOTO   266
0262:  INCF   37,F
0263:  MOVWF  3F
0264:  CALL   0AC
0265:  GOTO   25D
....................          display(value2); 
0266:  MOVF   2B,W
0267:  MOVWF  38
0268:  MOVF   2A,W
0269:  MOVWF  37
026A:  CALL   0DC
....................          command(0xC0); 
026B:  MOVLW  C0
026C:  MOVWF  37
026D:  CALL   0A2
....................          data("L3:"); 
026E:  CLRF   37
026F:  MOVF   37,W
0270:  CALL   056
0271:  IORLW  00
0272:  BTFSC  03.2
0273:  GOTO   278
0274:  INCF   37,F
0275:  MOVWF  3F
0276:  CALL   0AC
0277:  GOTO   26F
....................          display(value3); 
0278:  MOVF   2D,W
0279:  MOVWF  38
027A:  MOVF   2C,W
027B:  MOVWF  37
027C:  CALL   0DC
....................          command(0xC8); 
027D:  MOVLW  C8
027E:  MOVWF  37
027F:  CALL   0A2
....................          data("L4:"); 
0280:  CLRF   37
0281:  MOVF   37,W
0282:  CALL   05E
0283:  IORLW  00
0284:  BTFSC  03.2
0285:  GOTO   28A
0286:  INCF   37,F
0287:  MOVWF  3F
0288:  CALL   0AC
0289:  GOTO   281
....................          display(value4); 
028A:  MOVF   2F,W
028B:  MOVWF  38
028C:  MOVF   2E,W
028D:  MOVWF  37
028E:  CALL   0DC
....................       } 
....................       else{ 
028F:  GOTO   2B4
....................          command(0x80); 
0290:  MOVLW  80
0291:  MOVWF  37
0292:  CALL   0A2
....................          data("BATTERY1 :"); 
0293:  CLRF   37
0294:  MOVF   37,W
0295:  CALL   066
0296:  IORLW  00
0297:  BTFSC  03.2
0298:  GOTO   29D
0299:  INCF   37,F
029A:  MOVWF  3F
029B:  CALL   0AC
029C:  GOTO   294
....................          display(value5); 
029D:  MOVF   31,W
029E:  MOVWF  38
029F:  MOVF   30,W
02A0:  MOVWF  37
02A1:  CALL   0DC
....................          command(0xC0); 
02A2:  MOVLW  C0
02A3:  MOVWF  37
02A4:  CALL   0A2
....................          data("BATTERY2 :"); 
02A5:  CLRF   37
02A6:  MOVF   37,W
02A7:  CALL   075
02A8:  IORLW  00
02A9:  BTFSC  03.2
02AA:  GOTO   2AF
02AB:  INCF   37,F
02AC:  MOVWF  3F
02AD:  CALL   0AC
02AE:  GOTO   2A6
....................          display(value6); 
02AF:  MOVF   33,W
02B0:  MOVWF  38
02B1:  MOVF   32,W
02B2:  MOVWF  37
02B3:  CALL   0DC
....................       } 
....................  
....................       if((value1+50) > value2){ 
02B4:  MOVLW  32
02B5:  ADDWF  28,W
02B6:  MOVWF  37
02B7:  MOVF   29,W
02B8:  MOVWF  38
02B9:  BTFSC  03.0
02BA:  INCF   38,F
02BB:  MOVF   2B,W
02BC:  SUBWF  38,W
02BD:  BTFSS  03.0
02BE:  GOTO   2C7
02BF:  BTFSS  03.2
02C0:  GOTO   2C5
02C1:  MOVF   37,W
02C2:  SUBWF  2A,W
02C3:  BTFSC  03.0
02C4:  GOTO   2C7
....................          motor1_p = 1; 
02C5:  BSF    06.0
....................          motor1_n = 0; 
02C6:  BCF    06.1
....................       } 
....................       if((value3+50) > value4){ 
02C7:  MOVLW  32
02C8:  ADDWF  2C,W
02C9:  MOVWF  37
02CA:  MOVF   2D,W
02CB:  MOVWF  38
02CC:  BTFSC  03.0
02CD:  INCF   38,F
02CE:  MOVF   2F,W
02CF:  SUBWF  38,W
02D0:  BTFSS  03.0
02D1:  GOTO   2DA
02D2:  BTFSS  03.2
02D3:  GOTO   2D8
02D4:  MOVF   37,W
02D5:  SUBWF  2E,W
02D6:  BTFSC  03.0
02D7:  GOTO   2DA
....................          motor2_p = 1; 
02D8:  BSF    06.2
....................          motor2_n = 0; 
02D9:  BCF    06.3
....................       } 
....................       if((value2+50) > value1){ 
02DA:  MOVLW  32
02DB:  ADDWF  2A,W
02DC:  MOVWF  37
02DD:  MOVF   2B,W
02DE:  MOVWF  38
02DF:  BTFSC  03.0
02E0:  INCF   38,F
02E1:  MOVF   29,W
02E2:  SUBWF  38,W
02E3:  BTFSS  03.0
02E4:  GOTO   2ED
02E5:  BTFSS  03.2
02E6:  GOTO   2EB
02E7:  MOVF   37,W
02E8:  SUBWF  28,W
02E9:  BTFSC  03.0
02EA:  GOTO   2ED
....................          motor1_p = 0; 
02EB:  BCF    06.0
....................          motor1_n = 1; 
02EC:  BSF    06.1
....................       } 
....................       if((value4+50) > value3){ 
02ED:  MOVLW  32
02EE:  ADDWF  2E,W
02EF:  MOVWF  37
02F0:  MOVF   2F,W
02F1:  MOVWF  38
02F2:  BTFSC  03.0
02F3:  INCF   38,F
02F4:  MOVF   2D,W
02F5:  SUBWF  38,W
02F6:  BTFSS  03.0
02F7:  GOTO   300
02F8:  BTFSS  03.2
02F9:  GOTO   2FE
02FA:  MOVF   37,W
02FB:  SUBWF  2C,W
02FC:  BTFSC  03.0
02FD:  GOTO   300
....................          motor2_p = 0; 
02FE:  BCF    06.2
....................          motor2_n = 1; 
02FF:  BSF    06.3
....................       } 
....................       if(((value1-value2) < 50)||((value2-value1) < 50)){ 
0300:  MOVF   2A,W
0301:  SUBWF  28,W
0302:  MOVWF  37
0303:  MOVF   29,W
0304:  MOVWF  38
0305:  MOVF   2B,W
0306:  BTFSS  03.0
0307:  INCFSZ 2B,W
0308:  SUBWF  38,F
0309:  MOVF   38,F
030A:  BTFSS  03.2
030B:  GOTO   310
030C:  MOVF   37,W
030D:  SUBLW  31
030E:  BTFSC  03.0
030F:  GOTO   320
0310:  MOVF   28,W
0311:  SUBWF  2A,W
0312:  MOVWF  39
0313:  MOVF   2B,W
0314:  MOVWF  3A
0315:  MOVF   29,W
0316:  BTFSS  03.0
0317:  INCFSZ 29,W
0318:  SUBWF  3A,F
0319:  MOVF   3A,F
031A:  BTFSS  03.2
031B:  GOTO   322
031C:  MOVF   39,W
031D:  SUBLW  31
031E:  BTFSS  03.0
031F:  GOTO   322
....................          motor1_p = 0; 
0320:  BCF    06.0
....................          motor1_n = 0; 
0321:  BCF    06.1
....................       } 
....................       if(((value3-value4) < 50)||((value4-value3) < 50)){ 
0322:  MOVF   2E,W
0323:  SUBWF  2C,W
0324:  MOVWF  37
0325:  MOVF   2D,W
0326:  MOVWF  38
0327:  MOVF   2F,W
0328:  BTFSS  03.0
0329:  INCFSZ 2F,W
032A:  SUBWF  38,F
032B:  MOVF   38,F
032C:  BTFSS  03.2
032D:  GOTO   332
032E:  MOVF   37,W
032F:  SUBLW  31
0330:  BTFSC  03.0
0331:  GOTO   342
0332:  MOVF   2C,W
0333:  SUBWF  2E,W
0334:  MOVWF  39
0335:  MOVF   2F,W
0336:  MOVWF  3A
0337:  MOVF   2D,W
0338:  BTFSS  03.0
0339:  INCFSZ 2D,W
033A:  SUBWF  3A,F
033B:  MOVF   3A,F
033C:  BTFSS  03.2
033D:  GOTO   344
033E:  MOVF   39,W
033F:  SUBLW  31
0340:  BTFSS  03.0
0341:  GOTO   344
....................          motor2_p = 0; 
0342:  BCF    06.2
....................          motor2_n = 0; 
0343:  BCF    06.3
....................       } 
....................       if(((value5)+50) > (value6)){ 
0344:  MOVLW  32
0345:  ADDWF  30,W
0346:  MOVWF  37
0347:  MOVF   31,W
0348:  MOVWF  38
0349:  BTFSC  03.0
034A:  INCF   38,F
034B:  MOVF   33,W
034C:  SUBWF  38,W
034D:  BTFSS  03.0
034E:  GOTO   357
034F:  BTFSS  03.2
0350:  GOTO   355
0351:  MOVF   37,W
0352:  SUBWF  32,W
0353:  BTFSC  03.0
0354:  GOTO   357
....................          relay1=1; 
0355:  BSF    06.4
....................          relay2=0; 
0356:  BCF    06.5
....................       } 
....................  
....................       if(((value6)+50) > (value5)){ 
0357:  MOVLW  32
0358:  ADDWF  32,W
0359:  MOVWF  37
035A:  MOVF   33,W
035B:  MOVWF  38
035C:  BTFSC  03.0
035D:  INCF   38,F
035E:  MOVF   31,W
035F:  SUBWF  38,W
0360:  BTFSS  03.0
0361:  GOTO   36A
0362:  BTFSS  03.2
0363:  GOTO   368
0364:  MOVF   37,W
0365:  SUBWF  30,W
0366:  BTFSC  03.0
0367:  GOTO   36A
....................          relay1=0; 
0368:  BCF    06.4
....................          relay2=1; 
0369:  BSF    06.5
....................       } 
....................  
....................    } 
036A:  GOTO   186
....................  
.................... } 
....................  
....................  
.................... void display(unsigned int16 n) 
.................... { 
036B:  SLEEP
....................    int i = 0; 
*
00DC:  CLRF   39
....................    int a[4]; 
....................  
....................    for(i=0;i<=3;i++) 
00DD:  CLRF   39
00DE:  MOVF   39,W
00DF:  SUBLW  03
00E0:  BTFSS  03.0
00E1:  GOTO   0FD
....................    { 
....................       a[i]=n%10; 
00E2:  MOVLW  3A
00E3:  ADDWF  39,W
00E4:  MOVWF  04
00E5:  MOVF   38,W
00E6:  MOVWF  40
00E7:  MOVF   37,W
00E8:  MOVWF  3F
00E9:  CLRF   42
00EA:  MOVLW  0A
00EB:  MOVWF  41
00EC:  CALL   0B6
00ED:  MOVF   77,W
00EE:  MOVWF  00
....................       n=n/10; 
00EF:  MOVF   38,W
00F0:  MOVWF  40
00F1:  MOVF   37,W
00F2:  MOVWF  3F
00F3:  CLRF   42
00F4:  MOVLW  0A
00F5:  MOVWF  41
00F6:  CALL   0B6
00F7:  MOVF   79,W
00F8:  MOVWF  38
00F9:  MOVF   78,W
00FA:  MOVWF  37
....................    } 
00FB:  INCF   39,F
00FC:  GOTO   0DE
....................  
....................    data(a[3]|0x30); 
00FD:  MOVF   3D,W
00FE:  IORLW  30
00FF:  MOVWF  3E
0100:  MOVWF  3F
0101:  CALL   0AC
....................    data(a[2]|0x30); 
0102:  MOVF   3C,W
0103:  IORLW  30
0104:  MOVWF  3E
0105:  MOVWF  3F
0106:  CALL   0AC
....................    data(a[1]|0x30); 
0107:  MOVF   3B,W
0108:  IORLW  30
0109:  MOVWF  3E
010A:  MOVWF  3F
010B:  CALL   0AC
....................    data(a[0]|0x30); 
010C:  MOVF   3A,W
010D:  IORLW  30
010E:  MOVWF  3E
010F:  MOVWF  3F
0110:  CALL   0AC
.................... } 
0111:  RETLW  00
....................  
....................  
.................... /* 
....................  
....................       if((value1>value2) && (value1>value3) && (value1>value4) && (LDR1_FLAG==0)){ 
....................          IF(LDR2_FLAG==1){ 
....................             REVERSE=1; 
....................             FORWARD=0; 
....................             DELAY_MS(250); 
....................             REVERSE=0; 
....................          } 
....................          ELSE IF(LDR3_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(500); 
....................             FORWARD=0; 
....................          } 
....................          ELSE IF(LDR4_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(250); 
....................             FORWARD=0; 
....................          } 
....................          LDR1_FLAG=1; 
....................          LDR2_FLAG=0; 
....................          LDR3_FLAG=0; 
....................          LDR4_FLAG=0; 
....................       } 
....................  
....................  
....................       if((value2>value1) && (value2>value3) && (value2>value4) && (LDR2_FLAG==0)){ 
....................          IF(LDR3_FLAG==1){ 
....................             REVERSE=1; 
....................             FORWARD=0; 
....................             DELAY_MS(250); 
....................             REVERSE=0; 
....................          } 
....................          ELSE IF(LDR4_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(500); 
....................             FORWARD=0; 
....................          } 
....................          ELSE IF(LDR1_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(250); 
....................             FORWARD=0; 
....................          } 
....................          LDR1_FLAG=0; 
....................          LDR2_FLAG=1; 
....................          LDR3_FLAG=0; 
....................          LDR4_FLAG=0; 
....................       } 
....................  
....................  
....................  
....................       if((value3>value1) && (value3>value2) && (value3>value4) && (LDR3_FLAG==0)){ 
....................          IF(LDR4_FLAG==1){ 
....................             REVERSE=1; 
....................             FORWARD=0; 
....................             DELAY_MS(250); 
....................             REVERSE=0; 
....................          } 
....................          ELSE IF(LDR1_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(500); 
....................             FORWARD=0; 
....................          } 
....................          ELSE IF(LDR2_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(250); 
....................             FORWARD=0; 
....................          } 
....................          LDR1_FLAG=0; 
....................          LDR2_FLAG=0; 
....................          LDR3_FLAG=1; 
....................          LDR4_FLAG=0; 
....................       } 
....................  
....................  
....................       if((value4>value1) && (value4>value2) && (value4>value3) && (LDR4_FLAG==0)){ 
....................          IF(LDR1_FLAG==1){ 
....................             REVERSE=1; 
....................             FORWARD=0; 
....................             DELAY_MS(250); 
....................             REVERSE=0; 
....................          } 
....................          ELSE IF(LDR2_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(500); 
....................             FORWARD=0; 
....................          } 
....................          ELSE IF(LDR3_FLAG==1){ 
....................             FORWARD=1; 
....................             REVERSE=0; 
....................             DELAY_MS(250); 
....................             FORWARD=0; 
....................          } 
....................          LDR1_FLAG=0; 
....................          LDR2_FLAG=0; 
....................          LDR3_FLAG=0; 
....................          LDR4_FLAG=1; 
....................       } 
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
