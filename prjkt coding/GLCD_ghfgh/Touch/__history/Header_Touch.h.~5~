#byte trisa=0x85
#byte porta=0x05

#byte trisd=0x88
#byte portd=0x08

#byte trise=0x89
#byte porte=0x09


#byte adcon0=0x1f
#byte adcon1=0x9f
#byte adresh=0x1e
#byte adresl=0x9e

#bit GO=0x1f.2

#define TOUCH_X1 porta.0
#define TOUCH_X2 porta.2

#define TOUCH_Y1 porta.1
#define TOUCH_Y2 porta.5
unsigned char read_touch()
{
   unsigned char array[10], pre_count, pre_value, count, i, j, x_value, y_value;
   
   for(i=0; i<10; i++)
   {
      trisa=0x05;
      TOUCH_Y1=0; TOUCH_Y2=1;
      
      adcon0=0x81;
      adcon1=0x42;
      
      delay_us(50);
      go=1;
      delay_us(50);
      while(go);
      array[i]=adresh;
   }
   
    for(i=0;i<9;i++)
   {
      for(j=i,count=0;j<9;j++)
      {
         if(array[i]==array[j])
         {
            count++;
            if(j==8)
            {
               if(pre_count<count)
               {
                  pre_count=count;
                  pre_value=array[i];
               }
            }
         }
      }
    
     if(pre_count>5)
      x_value=pre_value;
      
     else
      x_value=0;
   }
   
   ///////////////////// Y VALUE /////////////////
   
   for(i=0; i<10; i++)
   {
      trisa=0x22;
      TOUCH_X1=0; TOUCH_X2=1;
      
      adcon0=0x89;
      adcon1=0x42;
      
      delay_us(50);
      go=1;
      delay_us(50);
      while(go);
      array[i]=adresh;
   }
   
   for(i=0;i<9;i++)
   {
      for(j=i,count=0;j<9;j++)
      {
         if(array[i]==array[j])
         {
            count++;
            if(j==8)
            {
               if(pre_count<count)
               {
                  pre_count=count;
                  pre_value=array[i];
               }
            }
         }
      }
    
     if(pre_count>5)
      y_value=pre_value;
      
     else
      y_value=0;
   }
   return ((x_value & 0xf0)|(y_value & 0x0f));
   
}
