CCS PCM C Compiler, Version 3.249, 33340               16-Mar-14 12:19

               Filename: E:\Ganesh Potti\Ganesh Projects\Engineers Projects\Automatic meter reading using gsm\AIT_Energy and water meter using GSM\Automatic meter reading using gsm\meter.lst

               ROM used: 1608 words (20%)
                         Largest free fragment is 2048
               RAM used: 46 (26%) at main() level
                         57 (33%) worst case
               Stack:    4 worst case (3 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   49E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.1
001C:  GOTO   01F
001D:  BTFSC  0C.1
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   11D
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use delay(clock=11059200) 
*
013C:  MOVLW  50
013D:  MOVWF  04
013E:  MOVF   00,W
013F:  BTFSC  03.2
0140:  GOTO   14E
0141:  MOVLW  03
0142:  MOVWF  78
0143:  CLRF   77
0144:  DECFSZ 77,F
0145:  GOTO   144
0146:  DECFSZ 78,F
0147:  GOTO   143
0148:  MOVLW  95
0149:  MOVWF  77
014A:  DECFSZ 77,F
014B:  GOTO   14A
014C:  DECFSZ 00,F
014D:  GOTO   141
014E:  RETLW  00
.................... #use rs232(baud=9600, xmit=PIN_c6,rcv=PIN_c7) 
.................... #fuses NOWDT,HS,PUT, NOPROTECT,BROWNOUT, NOLVP, NOCPD, NOWRT 
....................  
.................... #byte porta=0x05 
.................... #byte trisa=0x85 
....................  
.................... #byte portb=0x06 
.................... #byte trisb=0x86 
....................  
.................... #bit key=portb.0 
.................... #bit buzzer=0x06.1 
.................... #bit relay=0x06.2 
.................... #bit flow_meter=0x06.7 
....................  
.................... #byte portc=0x07 
.................... #byte trisc=0x87 
....................  
.................... #byte portd=0x08 
.................... #byte trisd=0x88 
....................  
.................... #byte porte=0x09 
.................... #byte trise=0x89 
....................  
.................... #bit reg=0x09.0 
.................... #bit rw=0x09.1 
.................... #bit en=0x09.2 
....................  
.................... #byte tmr1h=0x0f 
.................... #byte tmr1l=0x0e 
.................... #byte t1con=0x10 
.................... #byte pir1=0x0c 
.................... #byte pie1=0x8c 
.................... #byte tmr0=0x01 
....................  
.................... #byte tmr2=0x11 
.................... #byte t2con=0x12 
.................... #byte pr2=0x92 
.................... #byte pir1=0x0c 
.................... #byte pie1=0x8c 
....................  
.................... #bit tmr1on=t1con.0 
....................  
.................... #byte option_reg=0x81 
.................... #byte intcon=0x0b 
....................  
.................... unsigned char value=0 ; 
*
04B0:  BCF    03.5
04B1:  CLRF   28
.................... unsigned int16 count=0 , value_1=0 , count_1; 
04B2:  CLRF   29
04B3:  CLRF   2A
04B4:  CLRF   2B
04B5:  CLRF   2C
.................... void gsm(unsigned char no); 
.................... void gsm1(unsigned char no); 
.................... void gsm2(unsigned char no); 
.................... void gsm3(unsigned char no); 
.................... void send(unsigned int16 o); 
.................... void send1(unsigned int16 y); 
.................... void DISPLAY_SEC(int m); 
.................... void DISPLAY_MINT(int n); 
.................... void DISPLAY_HOURS(int p); 
.................... unsigned char b=0,sec=0,mint=0,hours=0; 
04B6:  CLRF   2F
04B7:  CLRF   30
04B8:  CLRF   31
04B9:  CLRF   32
.................... void display(unsigned int16 p); 
.................... void display1(unsigned int16 t); 
.................... INT D[5]={0},v[5]={0} , c[4]={0} , delay_count=0 ,k[4]={0} ; 
04BA:  CLRF   33
04BB:  CLRF   34
04BC:  CLRF   35
04BD:  CLRF   36
04BE:  CLRF   37
04BF:  CLRF   38
04C0:  CLRF   39
04C1:  CLRF   3A
04C2:  CLRF   3B
04C3:  CLRF   3C
04C4:  CLRF   3D
04C5:  CLRF   3E
04C6:  CLRF   3F
04C7:  CLRF   40
04C8:  CLRF   41
04C9:  CLRF   42
04CA:  CLRF   43
04CB:  CLRF   44
04CC:  CLRF   45
.................... int1 glag=0,flag=0,flag_1=0 , key_flag = 0 , paid = 0; 
04CD:  BCF    46.0
04CE:  BCF    46.1
04CF:  BCF    46.2
04D0:  BCF    46.3
04D1:  BCF    46.4
....................  
.................... #INT_TIMER2 
.................... TIMER2_ISR() 
.................... { 
....................    b++; 
*
011D:  INCF   2F,F
....................    if(b>=43) 
011E:  MOVF   2F,W
011F:  SUBLW  2A
0120:  BTFSC  03.0
0121:  GOTO   138
....................    { 
....................       b=0; 
0122:  CLRF   2F
....................       flag=1; 
0123:  BSF    46.1
....................       sec++; 
0124:  INCF   30,F
....................       if(sec>=60) 
0125:  MOVF   30,W
0126:  SUBLW  3B
0127:  BTFSC  03.0
0128:  GOTO   138
....................       { 
....................          sec=0; 
0129:  CLRF   30
....................          flag_1=1; 
012A:  BSF    46.2
....................          mint++; 
012B:  INCF   31,F
....................          if(mint>=60) 
012C:  MOVF   31,W
012D:  SUBLW  3B
012E:  BTFSC  03.0
012F:  GOTO   138
....................          { 
....................             mint=0; 
0130:  CLRF   31
....................             hours++; 
0131:  INCF   32,F
....................             if(hours==13) 
0132:  MOVF   32,W
0133:  SUBLW  0D
0134:  BTFSS  03.2
0135:  GOTO   138
....................             { 
....................                hours=1; 
0136:  MOVLW  01
0137:  MOVWF  32
....................             } 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
0138:  BCF    0C.1
0139:  BCF    0A.3
013A:  BCF    0A.4
013B:  GOTO   01F
.................... void command(unsigned char com) 
.................... { 
.................... portd=com; 
*
014F:  MOVF   4E,W
0150:  MOVWF  08
.................... reg=0; 
0151:  BCF    09.0
.................... rw=0; 
0152:  BCF    09.1
.................... en=1; 
0153:  BSF    09.2
.................... delay_ms(1); 
0154:  MOVLW  01
0155:  MOVWF  50
0156:  CALL   13C
.................... en=0; 
0157:  BCF    09.2
.................... } 
0158:  RETLW  00
....................  
.................... void data(unsigned char da) 
.................... { 
.................... portd=da; 
0159:  MOVF   4F,W
015A:  MOVWF  08
.................... reg=1; 
015B:  BSF    09.0
.................... rw=0; 
015C:  BCF    09.1
.................... en=1; 
015D:  BSF    09.2
.................... delay_ms(1); 
015E:  MOVLW  01
015F:  MOVWF  50
0160:  CALL   13C
.................... en=0; 
0161:  BCF    09.2
.................... } 
0162:  RETLW  00
.................... void main() 
.................... { 
*
049E:  CLRF   04
049F:  MOVLW  1F
04A0:  ANDWF  03,F
04A1:  MOVLW  11
04A2:  BSF    03.5
04A3:  MOVWF  19
04A4:  MOVLW  22
04A5:  MOVWF  18
04A6:  MOVLW  90
04A7:  BCF    03.5
04A8:  MOVWF  18
04A9:  BSF    03.5
04AA:  BSF    1F.0
04AB:  BSF    1F.1
04AC:  BSF    1F.2
04AD:  BCF    1F.3
04AE:  MOVLW  07
04AF:  MOVWF  1C
....................    trisd=0x00; 
*
04D2:  BSF    03.5
04D3:  CLRF   08
....................    trise=0x00; 
04D4:  CLRF   09
....................    trisc=0x01; 
04D5:  MOVLW  01
04D6:  MOVWF  07
....................    trisb=0x01; 
04D7:  MOVWF  06
....................    trisa=0x10; 
04D8:  MOVLW  10
04D9:  MOVWF  05
....................  
....................    portd=0x00; 
04DA:  BCF    03.5
04DB:  CLRF   08
....................    portc=0x00; 
04DC:  CLRF   07
....................    porte=0x00; 
04DD:  CLRF   09
....................    portb=0x00; 
04DE:  CLRF   06
....................    porta=0x00; 
04DF:  CLRF   05
....................  
....................    tmr0=0x00; 
04E0:  CLRF   01
....................  
....................    t1con=0x03; 
04E1:  MOVLW  03
04E2:  MOVWF  10
....................    tmr1l=0x00; 
04E3:  CLRF   0E
....................    tmr1h=0x00; 
04E4:  CLRF   0F
....................    option_reg=0x20; 
04E5:  MOVLW  20
04E6:  BSF    03.5
04E7:  MOVWF  01
....................  
....................    intcon=0xc0; 
04E8:  MOVLW  C0
04E9:  BCF    03.5
04EA:  MOVWF  0B
....................    t2con=0x7e; 
04EB:  MOVLW  7E
04EC:  MOVWF  12
....................    tmr1on=1; 
04ED:  BSF    10.0
....................    tmr2=0x00; 
04EE:  CLRF   11
....................    pie1=0x02; 
04EF:  MOVLW  02
04F0:  BSF    03.5
04F1:  MOVWF  0C
....................    pir1=0x00; 
04F2:  BCF    03.5
04F3:  CLRF   0C
....................    pr2=0xff; 
04F4:  MOVLW  FF
04F5:  BSF    03.5
04F6:  MOVWF  12
....................  
....................    fputs("AT+CMGF=1"); 
04F7:  BCF    03.5
04F8:  CLRF   47
04F9:  MOVF   47,W
04FA:  CALL   035
04FB:  IORLW  00
04FC:  BTFSC  03.2
04FD:  GOTO   503
04FE:  INCF   47,F
04FF:  BTFSS  0C.4
0500:  GOTO   4FF
0501:  MOVWF  19
0502:  GOTO   4F9
0503:  MOVLW  0D
0504:  BTFSS  0C.4
0505:  GOTO   504
0506:  MOVWF  19
0507:  MOVLW  0A
0508:  BTFSS  0C.4
0509:  GOTO   508
050A:  MOVWF  19
....................    delay_ms(1000); 
050B:  MOVLW  04
050C:  MOVWF  47
050D:  MOVLW  FA
050E:  MOVWF  50
050F:  CALL   13C
0510:  DECFSZ 47,F
0511:  GOTO   50D
....................  
....................    fputs("AT+CNMI=1,2,0,0,0"); 
0512:  CLRF   47
0513:  MOVF   47,W
0514:  CALL   043
0515:  IORLW  00
0516:  BTFSC  03.2
0517:  GOTO   51D
0518:  INCF   47,F
0519:  BTFSS  0C.4
051A:  GOTO   519
051B:  MOVWF  19
051C:  GOTO   513
051D:  MOVLW  0D
051E:  BTFSS  0C.4
051F:  GOTO   51E
0520:  MOVWF  19
0521:  MOVLW  0A
0522:  BTFSS  0C.4
0523:  GOTO   522
0524:  MOVWF  19
....................    delay_ms(1000); 
0525:  MOVLW  04
0526:  MOVWF  47
0527:  MOVLW  FA
0528:  MOVWF  50
0529:  CALL   13C
052A:  DECFSZ 47,F
052B:  GOTO   527
....................  
....................    //fputs("AT+CMGR=1"); 
....................    //delay_ms(1000); 
....................  
....................    command(0x38); 
052C:  MOVLW  38
052D:  MOVWF  4E
052E:  CALL   14F
....................    command(0x06); 
052F:  MOVLW  06
0530:  MOVWF  4E
0531:  CALL   14F
....................    command(0x0c); 
0532:  MOVLW  0C
0533:  MOVWF  4E
0534:  CALL   14F
....................    command(0x01); 
0535:  MOVLW  01
0536:  MOVWF  4E
0537:  CALL   14F
....................    delay_ms(250); 
0538:  MOVLW  FA
0539:  MOVWF  50
053A:  CALL   13C
....................    command(0x80); 
053B:  MOVLW  80
053C:  MOVWF  4E
053D:  CALL   14F
....................    data("AUTOMATIC ENERGY"); 
053E:  CLRF   47
053F:  MOVF   47,W
0540:  CALL   059
0541:  IORLW  00
0542:  BTFSC  03.2
0543:  GOTO   548
0544:  INCF   47,F
0545:  MOVWF  4F
0546:  CALL   159
0547:  GOTO   53F
....................    command(0xc0); 
0548:  MOVLW  C0
0549:  MOVWF  4E
054A:  CALL   14F
....................    data("METER USING GSM"); 
054B:  CLRF   47
054C:  MOVF   47,W
054D:  CALL   06E
054E:  IORLW  00
054F:  BTFSC  03.2
0550:  GOTO   555
0551:  INCF   47,F
0552:  MOVWF  4F
0553:  CALL   159
0554:  GOTO   54C
....................    delay_ms(2000); 
0555:  MOVLW  08
0556:  MOVWF  47
0557:  MOVLW  FA
0558:  MOVWF  50
0559:  CALL   13C
055A:  DECFSZ 47,F
055B:  GOTO   557
....................    command(0x01); 
055C:  MOVLW  01
055D:  MOVWF  4E
055E:  CALL   14F
....................    delay_ms(2); 
055F:  MOVLW  02
0560:  MOVWF  50
0561:  CALL   13C
....................  
....................    while(1) 
....................    { 
....................       if(key==0) 
0562:  BTFSS  06.0
....................          key_flag=1; 
0563:  BSF    46.3
....................  
....................       if((key==1) && (key_flag==1)) 
0564:  BTFSS  06.0
0565:  GOTO   56A
0566:  BTFSS  46.3
0567:  GOTO   56A
....................       { 
....................          key_flag=0; 
0568:  BCF    46.3
....................          paid=1; 
0569:  BSF    46.4
....................       } 
....................       delay_ms(100); 
056A:  MOVLW  64
056B:  MOVWF  50
056C:  CALL   13C
....................       command(0x80); 
056D:  MOVLW  80
056E:  MOVWF  4E
056F:  CALL   14F
....................       data("H:MI:SE:"); 
0570:  CLRF   47
0571:  MOVF   47,W
0572:  CALL   082
0573:  IORLW  00
0574:  BTFSC  03.2
0575:  GOTO   57A
0576:  INCF   47,F
0577:  MOVWF  4F
0578:  CALL   159
0579:  GOTO   571
....................       DISPLAY_SEC(sec); 
057A:  MOVF   30,W
057B:  MOVWF  47
057C:  GOTO   178
....................       DISPLAY_MINT(mint); 
057D:  MOVF   31,W
057E:  MOVWF  47
057F:  GOTO   1A1
....................       DISPLAY_HOURS(hours); 
0580:  MOVF   32,W
0581:  MOVWF  47
0582:  GOTO   1D7
....................  
....................       delay_ms(100); 
0583:  MOVLW  64
0584:  MOVWF  50
0585:  CALL   13C
....................       command(0xc0); 
0586:  MOVLW  C0
0587:  MOVWF  4E
0588:  CALL   14F
....................       data("WATR:"); 
0589:  CLRF   47
058A:  MOVF   47,W
058B:  CALL   08F
058C:  IORLW  00
058D:  BTFSC  03.2
058E:  GOTO   593
058F:  INCF   47,F
0590:  MOVWF  4F
0591:  CALL   159
0592:  GOTO   58A
....................       count=make16(tmr1h,tmr1l); 
0593:  MOVF   0F,W
0594:  MOVWF  2A
0595:  MOVF   0E,W
0596:  MOVWF  29
....................       display1(count); 
0597:  MOVF   2A,W
0598:  MOVWF  48
0599:  MOVF   29,W
059A:  MOVWF  47
059B:  GOTO   233
....................  
....................       if(count>=3000) 
059C:  MOVF   2A,W
059D:  SUBLW  0A
059E:  BTFSC  03.0
059F:  GOTO   5AD
05A0:  XORLW  FF
05A1:  BTFSS  03.2
05A2:  GOTO   5A7
05A3:  MOVF   29,W
05A4:  SUBLW  B7
05A5:  BTFSC  03.0
05A6:  GOTO   5AD
....................       { 
....................          count=0;tmr1on = 0; 
05A7:  CLRF   2A
05A8:  CLRF   29
05A9:  BCF    10.0
....................          flow_meter = 1 ; 
05AA:  BSF    06.7
....................          tmr1l=0; 
05AB:  CLRF   0E
....................          tmr1h=0; 
05AC:  CLRF   0F
....................       } 
....................       delay_ms(10); 
05AD:  MOVLW  0A
05AE:  MOVWF  50
05AF:  CALL   13C
....................       command(0xc9); 
05B0:  MOVLW  C9
05B1:  MOVWF  4E
05B2:  CALL   14F
....................       data("EB:"); 
05B3:  CLRF   47
05B4:  MOVF   47,W
05B5:  CALL   099
05B6:  IORLW  00
05B7:  BTFSC  03.2
05B8:  GOTO   5BD
05B9:  INCF   47,F
05BA:  MOVWF  4F
05BB:  CALL   159
05BC:  GOTO   5B4
....................       value=tmr0; 
05BD:  MOVF   01,W
05BE:  MOVWF  28
....................       display(value); 
05BF:  CLRF   48
05C0:  MOVF   28,W
05C1:  MOVWF  47
05C2:  GOTO   27B
....................  
....................       if(flag_1==1) 
05C3:  BTFSS  46.2
05C4:  GOTO   61F
....................       { 
....................          flag_1=0; 
05C5:  BCF    46.2
....................          if((value>1) || (count>1)) 
05C6:  MOVF   28,W
05C7:  SUBLW  01
05C8:  BTFSS  03.0
05C9:  GOTO   5D1
05CA:  MOVF   2A,F
05CB:  BTFSS  03.2
05CC:  GOTO   5D1
05CD:  MOVF   29,W
05CE:  SUBLW  01
05CF:  BTFSC  03.0
05D0:  GOTO   61F
....................          { 
....................             value_1=(int16)value*5; 
05D1:  CLRF   48
05D2:  MOVF   28,W
05D3:  MOVWF  47
05D4:  MOVF   48,W
05D5:  MOVWF  4A
05D6:  MOVF   28,W
05D7:  MOVWF  49
05D8:  CLRF   4C
05D9:  MOVLW  05
05DA:  MOVWF  4B
05DB:  GOTO   2C3
05DC:  MOVF   79,W
05DD:  MOVWF  2C
05DE:  MOVF   78,W
05DF:  MOVWF  2B
....................             send(value_1); 
05E0:  MOVF   2C,W
05E1:  MOVWF  48
05E2:  MOVF   2B,W
05E3:  MOVWF  47
05E4:  GOTO   2DA
....................             count_1=(int16)count*1; 
05E5:  MOVF   2A,W
05E6:  MOVWF  2E
05E7:  MOVF   29,W
05E8:  MOVWF  2D
....................             send1(count_1); 
05E9:  MOVF   2E,W
05EA:  MOVWF  48
05EB:  MOVF   2D,W
05EC:  MOVWF  47
05ED:  GOTO   2FE
....................             GSM(0); 
05EE:  CLRF   47
05EF:  CALL   322
....................             DELAY_MS(500); 
05F0:  MOVLW  02
05F1:  MOVWF  47
05F2:  MOVLW  FA
05F3:  MOVWF  50
05F4:  CALL   13C
05F5:  DECFSZ 47,F
05F6:  GOTO   5F2
....................             GSM(1); 
05F7:  MOVLW  01
05F8:  MOVWF  47
05F9:  CALL   322
....................             delay_ms(500); 
05FA:  MOVLW  02
05FB:  MOVWF  47
05FC:  MOVLW  FA
05FD:  MOVWF  50
05FE:  CALL   13C
05FF:  DECFSZ 47,F
0600:  GOTO   5FC
....................             GSM1(0); 
0601:  CLRF   47
0602:  CALL   380
....................             DELAY_MS(500); 
0603:  MOVLW  02
0604:  MOVWF  47
0605:  MOVLW  FA
0606:  MOVWF  50
0607:  CALL   13C
0608:  DECFSZ 47,F
0609:  GOTO   605
....................             GSM1(1); 
060A:  MOVLW  01
060B:  MOVWF  47
060C:  CALL   380
....................             delay_ms(500); 
060D:  MOVLW  02
060E:  MOVWF  47
060F:  MOVLW  FA
0610:  MOVWF  50
0611:  CALL   13C
0612:  DECFSZ 47,F
0613:  GOTO   60F
....................             GSM2(0); 
0614:  CLRF   47
0615:  GOTO   3DE
....................             delay_ms(500); 
0616:  MOVLW  02
0617:  MOVWF  47
0618:  MOVLW  FA
0619:  MOVWF  50
061A:  CALL   13C
061B:  DECFSZ 47,F
061C:  GOTO   618
....................             GSM3(0); 
061D:  CLRF   47
061E:  GOTO   43E
....................          } 
....................       } 
....................  
....................       if(value>10) 
061F:  MOVF   28,W
0620:  SUBLW  0A
0621:  BTFSC  03.0
0622:  GOTO   646
....................       {  
....................          if((delay_count==0) && (relay==1)) 
0623:  MOVF   41,F
0624:  BTFSS  03.2
0625:  GOTO   628
0626:  BTFSC  06.2
....................             buzzer=1; 
0627:  BSF    06.1
....................  
....................          if(delay_count>=1) 
0628:  MOVF   41,W
0629:  SUBLW  00
062A:  BTFSS  03.0
....................             buzzer=0; 
062B:  BCF    06.1
....................  
....................          if(flag==1) 
062C:  BTFSS  46.1
062D:  GOTO   630
....................          { 
....................             flag=0; 
062E:  BCF    46.1
....................             delay_count++; 
062F:  INCF   41,F
....................          } 
....................          if((paid==1) && (delay_count<10)) 
0630:  BTFSS  46.4
0631:  GOTO   63C
0632:  MOVF   41,W
0633:  SUBLW  09
0634:  BTFSS  03.0
0635:  GOTO   63C
....................          { 
....................             paid=0; 
0636:  BCF    46.4
....................             relay=0; 
0637:  BCF    06.2
....................             value=0; 
0638:  CLRF   28
....................             tmr0=0; 
0639:  CLRF   01
....................             delay_count=0; 
063A:  CLRF   41
....................          } 
....................          else if((delay_count>=10) && (paid==0)) 
063B:  GOTO   646
063C:  MOVF   41,W
063D:  SUBLW  09
063E:  BTFSC  03.0
063F:  GOTO   646
0640:  BTFSC  46.4
0641:  GOTO   646
....................          { 
....................             value=0; 
0642:  CLRF   28
....................             relay=1; 
0643:  BSF    06.2
....................             tmr0=0; 
0644:  CLRF   01
....................             delay_count=0; 
0645:  CLRF   41
....................          } 
....................       } 
....................    } 
0646:  GOTO   562
.................... } 
....................  
.................... void display1(unsigned int16 t) 
.................... { 
0647:  SLEEP
....................    int m=0,q[4]; 
*
0233:  CLRF   49
....................    for(m=0;m<=3;m++) 
0234:  CLRF   49
0235:  MOVF   49,W
0236:  SUBLW  03
0237:  BTFSS  03.0
0238:  GOTO   261
....................    { 
....................       q[m]=t%10; 
0239:  MOVLW  4A
023A:  ADDWF  49,W
023B:  MOVWF  04
023C:  MOVF   48,W
023D:  MOVWF  50
023E:  MOVF   47,W
023F:  MOVWF  4F
0240:  CLRF   52
0241:  MOVLW  0A
0242:  MOVWF  51
0243:  CALL   20D
0244:  MOVF   77,W
0245:  MOVWF  00
....................       v[m]=t%10; 
0246:  MOVLW  38
0247:  ADDWF  49,W
0248:  MOVWF  04
0249:  MOVF   48,W
024A:  MOVWF  50
024B:  MOVF   47,W
024C:  MOVWF  4F
024D:  CLRF   52
024E:  MOVLW  0A
024F:  MOVWF  51
0250:  CALL   20D
0251:  MOVF   77,W
0252:  MOVWF  00
....................       t=t/10; 
0253:  MOVF   48,W
0254:  MOVWF  50
0255:  MOVF   47,W
0256:  MOVWF  4F
0257:  CLRF   52
0258:  MOVLW  0A
0259:  MOVWF  51
025A:  CALL   20D
025B:  MOVF   79,W
025C:  MOVWF  48
025D:  MOVF   78,W
025E:  MOVWF  47
....................    } 
025F:  INCF   49,F
0260:  GOTO   235
....................    command(0xc5); 
0261:  MOVLW  C5
0262:  MOVWF  4E
0263:  CALL   14F
....................    data(q[3]|0x30); 
0264:  MOVF   4D,W
0265:  IORLW  30
0266:  MOVWF  4E
0267:  MOVWF  4F
0268:  CALL   159
....................    data(q[2]|0x30); 
0269:  MOVF   4C,W
026A:  IORLW  30
026B:  MOVWF  4E
026C:  MOVWF  4F
026D:  CALL   159
....................    data(q[1]|0x30); 
026E:  MOVF   4B,W
026F:  IORLW  30
0270:  MOVWF  4E
0271:  MOVWF  4F
0272:  CALL   159
....................    data(q[0]|0x30); 
0273:  MOVF   4A,W
0274:  IORLW  30
0275:  MOVWF  4E
0276:  MOVWF  4F
0277:  CALL   159
.................... } 
0278:  BCF    0A.3
0279:  BCF    0A.4
027A:  GOTO   59C (RETURN)
.................... void display(unsigned int16 p) 
.................... { 
....................    int L=0,W[4]; 
027B:  CLRF   49
....................    for(L=0;L<=3;L++) 
027C:  CLRF   49
027D:  MOVF   49,W
027E:  SUBLW  03
027F:  BTFSS  03.0
0280:  GOTO   2A9
....................    { 
....................       W[L]=p%10; 
0281:  MOVLW  4A
0282:  ADDWF  49,W
0283:  MOVWF  04
0284:  MOVF   48,W
0285:  MOVWF  50
0286:  MOVF   47,W
0287:  MOVWF  4F
0288:  CLRF   52
0289:  MOVLW  0A
028A:  MOVWF  51
028B:  CALL   20D
028C:  MOVF   77,W
028D:  MOVWF  00
....................       D[L]=p%10; 
028E:  MOVLW  33
028F:  ADDWF  49,W
0290:  MOVWF  04
0291:  MOVF   48,W
0292:  MOVWF  50
0293:  MOVF   47,W
0294:  MOVWF  4F
0295:  CLRF   52
0296:  MOVLW  0A
0297:  MOVWF  51
0298:  CALL   20D
0299:  MOVF   77,W
029A:  MOVWF  00
....................       p=p/10; 
029B:  MOVF   48,W
029C:  MOVWF  50
029D:  MOVF   47,W
029E:  MOVWF  4F
029F:  CLRF   52
02A0:  MOVLW  0A
02A1:  MOVWF  51
02A2:  CALL   20D
02A3:  MOVF   79,W
02A4:  MOVWF  48
02A5:  MOVF   78,W
02A6:  MOVWF  47
....................    } 
02A7:  INCF   49,F
02A8:  GOTO   27D
....................    command(0xcc); 
02A9:  MOVLW  CC
02AA:  MOVWF  4E
02AB:  CALL   14F
....................    data(W[3]|0x30); 
02AC:  MOVF   4D,W
02AD:  IORLW  30
02AE:  MOVWF  4E
02AF:  MOVWF  4F
02B0:  CALL   159
....................    data(W[2]|0x30); 
02B1:  MOVF   4C,W
02B2:  IORLW  30
02B3:  MOVWF  4E
02B4:  MOVWF  4F
02B5:  CALL   159
....................    data(W[1]|0x30); 
02B6:  MOVF   4B,W
02B7:  IORLW  30
02B8:  MOVWF  4E
02B9:  MOVWF  4F
02BA:  CALL   159
....................    data(W[0]|0x30); 
02BB:  MOVF   4A,W
02BC:  IORLW  30
02BD:  MOVWF  4E
02BE:  MOVWF  4F
02BF:  CALL   159
.................... } 
02C0:  BCF    0A.3
02C1:  BCF    0A.4
02C2:  GOTO   5C3 (RETURN)
....................  
.................... void DISPLAY_SEC(int m) 
.................... { 
....................    INT X[2],I=0; 
*
0178:  CLRF   4A
....................    FOR(I=0;I<2;I++) 
0179:  CLRF   4A
017A:  MOVF   4A,W
017B:  SUBLW  01
017C:  BTFSS  03.0
017D:  GOTO   191
....................    { 
....................       X[I]=m%10; 
017E:  MOVLW  48
017F:  ADDWF  4A,W
0180:  MOVWF  04
0181:  MOVF   47,W
0182:  MOVWF  4C
0183:  MOVLW  0A
0184:  MOVWF  4D
0185:  CALL   163
0186:  MOVF   77,W
0187:  MOVWF  00
....................       m=m/10; 
0188:  MOVF   47,W
0189:  MOVWF  4C
018A:  MOVLW  0A
018B:  MOVWF  4D
018C:  CALL   163
018D:  MOVF   78,W
018E:  MOVWF  47
....................    } 
018F:  INCF   4A,F
0190:  GOTO   17A
....................    COMMAND(0X8E); 
0191:  MOVLW  8E
0192:  MOVWF  4E
0193:  CALL   14F
....................    DATA(X[1]|0X30); 
0194:  MOVF   49,W
0195:  IORLW  30
0196:  MOVWF  4B
0197:  MOVWF  4F
0198:  CALL   159
....................    DATA(X[0]|0X30); 
0199:  MOVF   48,W
019A:  IORLW  30
019B:  MOVWF  4B
019C:  MOVWF  4F
019D:  CALL   159
.................... } 
019E:  BCF    0A.3
019F:  BCF    0A.4
01A0:  GOTO   57D (RETURN)
.................... void DISPLAY_MINT(int n) 
.................... { 
....................    INT Y[2],J=0; 
01A1:  CLRF   4A
....................    FOR(J=0;J<2;J++) 
01A2:  CLRF   4A
01A3:  MOVF   4A,W
01A4:  SUBLW  01
01A5:  BTFSS  03.0
01A6:  GOTO   1BA
....................    { 
....................       Y[J]=n%10; 
01A7:  MOVLW  48
01A8:  ADDWF  4A,W
01A9:  MOVWF  04
01AA:  MOVF   47,W
01AB:  MOVWF  4C
01AC:  MOVLW  0A
01AD:  MOVWF  4D
01AE:  CALL   163
01AF:  MOVF   77,W
01B0:  MOVWF  00
....................       n=n/10; 
01B1:  MOVF   47,W
01B2:  MOVWF  4C
01B3:  MOVLW  0A
01B4:  MOVWF  4D
01B5:  CALL   163
01B6:  MOVF   78,W
01B7:  MOVWF  47
....................    } 
01B8:  INCF   4A,F
01B9:  GOTO   1A3
....................    COMMAND(0X8B); 
01BA:  MOVLW  8B
01BB:  MOVWF  4E
01BC:  CALL   14F
....................    DATA(Y[1]|0X30); 
01BD:  MOVF   49,W
01BE:  IORLW  30
01BF:  MOVWF  4B
01C0:  MOVWF  4F
01C1:  CALL   159
....................    DATA(Y[0]|0X30); 
01C2:  MOVF   48,W
01C3:  IORLW  30
01C4:  MOVWF  4B
01C5:  MOVWF  4F
01C6:  CALL   159
....................    command(0x8D); 
01C7:  MOVLW  8D
01C8:  MOVWF  4E
01C9:  CALL   14F
....................    DATA(":"); 
01CA:  CLRF   4B
01CB:  MOVF   4B,W
01CC:  CALL   0A1
01CD:  IORLW  00
01CE:  BTFSC  03.2
01CF:  GOTO   1D4
01D0:  INCF   4B,F
01D1:  MOVWF  4F
01D2:  CALL   159
01D3:  GOTO   1CB
.................... } 
01D4:  BCF    0A.3
01D5:  BCF    0A.4
01D6:  GOTO   580 (RETURN)
.................... void DISPLAY_HOURS(int p) 
.................... { 
....................    INT Z[2],K=0; 
01D7:  CLRF   4A
....................    FOR(K=0;K<2;K++) 
01D8:  CLRF   4A
01D9:  MOVF   4A,W
01DA:  SUBLW  01
01DB:  BTFSS  03.0
01DC:  GOTO   1F0
....................    { 
....................       Z[K]=p%10; 
01DD:  MOVLW  48
01DE:  ADDWF  4A,W
01DF:  MOVWF  04
01E0:  MOVF   47,W
01E1:  MOVWF  4C
01E2:  MOVLW  0A
01E3:  MOVWF  4D
01E4:  CALL   163
01E5:  MOVF   77,W
01E6:  MOVWF  00
....................       p=p/10; 
01E7:  MOVF   47,W
01E8:  MOVWF  4C
01E9:  MOVLW  0A
01EA:  MOVWF  4D
01EB:  CALL   163
01EC:  MOVF   78,W
01ED:  MOVWF  47
....................    } 
01EE:  INCF   4A,F
01EF:  GOTO   1D9
....................    COMMAND(0X88); 
01F0:  MOVLW  88
01F1:  MOVWF  4E
01F2:  CALL   14F
....................    DATA(Z[1]|0X30); 
01F3:  MOVF   49,W
01F4:  IORLW  30
01F5:  MOVWF  4B
01F6:  MOVWF  4F
01F7:  CALL   159
....................    DATA(Z[0]|0X30); 
01F8:  MOVF   48,W
01F9:  IORLW  30
01FA:  MOVWF  4B
01FB:  MOVWF  4F
01FC:  CALL   159
....................    command(0x8A); 
01FD:  MOVLW  8A
01FE:  MOVWF  4E
01FF:  CALL   14F
....................    DATA(":"); 
0200:  CLRF   4B
0201:  MOVF   4B,W
0202:  CALL   0A1
0203:  IORLW  00
0204:  BTFSC  03.2
0205:  GOTO   20A
0206:  INCF   4B,F
0207:  MOVWF  4F
0208:  CALL   159
0209:  GOTO   201
.................... } 
020A:  BCF    0A.3
020B:  BCF    0A.4
020C:  GOTO   583 (RETURN)
.................... void send(unsigned int16 o) 
.................... { 
....................    int g=0; 
*
02DA:  CLRF   49
....................    for(g=0;g<=3;g++) 
02DB:  CLRF   49
02DC:  MOVF   49,W
02DD:  SUBLW  03
02DE:  BTFSS  03.0
02DF:  GOTO   2FB
....................    { 
....................       c[g]=o%10; 
02E0:  MOVLW  3D
02E1:  ADDWF  49,W
02E2:  MOVWF  04
02E3:  MOVF   48,W
02E4:  MOVWF  50
02E5:  MOVF   47,W
02E6:  MOVWF  4F
02E7:  CLRF   52
02E8:  MOVLW  0A
02E9:  MOVWF  51
02EA:  CALL   20D
02EB:  MOVF   77,W
02EC:  MOVWF  00
....................       o=o/10; 
02ED:  MOVF   48,W
02EE:  MOVWF  50
02EF:  MOVF   47,W
02F0:  MOVWF  4F
02F1:  CLRF   52
02F2:  MOVLW  0A
02F3:  MOVWF  51
02F4:  CALL   20D
02F5:  MOVF   79,W
02F6:  MOVWF  48
02F7:  MOVF   78,W
02F8:  MOVWF  47
....................    } 
02F9:  INCF   49,F
02FA:  GOTO   2DC
.................... } 
02FB:  BCF    0A.3
02FC:  BCF    0A.4
02FD:  GOTO   5E5 (RETURN)
....................  
.................... void send1(unsigned int16 y) 
.................... { 
....................    int g=0; 
02FE:  CLRF   49
....................    for(g=0;g<=3;g++) 
02FF:  CLRF   49
0300:  MOVF   49,W
0301:  SUBLW  03
0302:  BTFSS  03.0
0303:  GOTO   31F
....................    { 
....................       k[g]=y%10; 
0304:  MOVLW  42
0305:  ADDWF  49,W
0306:  MOVWF  04
0307:  MOVF   48,W
0308:  MOVWF  50
0309:  MOVF   47,W
030A:  MOVWF  4F
030B:  CLRF   52
030C:  MOVLW  0A
030D:  MOVWF  51
030E:  CALL   20D
030F:  MOVF   77,W
0310:  MOVWF  00
....................       y=y/10; 
0311:  MOVF   48,W
0312:  MOVWF  50
0313:  MOVF   47,W
0314:  MOVWF  4F
0315:  CLRF   52
0316:  MOVLW  0A
0317:  MOVWF  51
0318:  CALL   20D
0319:  MOVF   79,W
031A:  MOVWF  48
031B:  MOVF   78,W
031C:  MOVWF  47
....................    } 
031D:  INCF   49,F
031E:  GOTO   300
.................... } 
031F:  BCF    0A.3
0320:  BCF    0A.4
0321:  GOTO   5EE (RETURN)
.................... void gsm(unsigned char no) 
.................... { 
....................    if(no==0) 
0322:  MOVF   47,F
0323:  BTFSS  03.2
0324:  GOTO   339
....................       puts("AT+CMGS=\"+919944296357\"");  //+919597826505 
0325:  CLRF   48
0326:  MOVF   48,W
0327:  CALL   0A7
0328:  IORLW  00
0329:  BTFSC  03.2
032A:  GOTO   330
032B:  INCF   48,F
032C:  BTFSS  0C.4
032D:  GOTO   32C
032E:  MOVWF  19
032F:  GOTO   326
0330:  MOVLW  0D
0331:  BTFSS  0C.4
0332:  GOTO   331
0333:  MOVWF  19
0334:  MOVLW  0A
0335:  BTFSS  0C.4
0336:  GOTO   335
0337:  MOVWF  19
....................    else 
0338:  GOTO   34C
....................       puts("AT+CMGS=\"+919944439363\"");  //918807155896 
0339:  CLRF   48
033A:  MOVF   48,W
033B:  CALL   0C3
033C:  IORLW  00
033D:  BTFSC  03.2
033E:  GOTO   344
033F:  INCF   48,F
0340:  BTFSS  0C.4
0341:  GOTO   340
0342:  MOVWF  19
0343:  GOTO   33A
0344:  MOVLW  0D
0345:  BTFSS  0C.4
0346:  GOTO   345
0347:  MOVWF  19
0348:  MOVLW  0A
0349:  BTFSS  0C.4
034A:  GOTO   349
034B:  MOVWF  19
....................  
....................    putc(D[3]|0X30); 
034C:  MOVF   36,W
034D:  IORLW  30
034E:  MOVWF  48
034F:  MOVF   48,W
0350:  BTFSS  0C.4
0351:  GOTO   350
0352:  MOVWF  19
....................    putc(D[2]|0X30); 
0353:  MOVF   35,W
0354:  IORLW  30
0355:  MOVWF  48
0356:  MOVF   48,W
0357:  BTFSS  0C.4
0358:  GOTO   357
0359:  MOVWF  19
....................    putc(D[1]|0X30); 
035A:  MOVF   34,W
035B:  IORLW  30
035C:  MOVWF  48
035D:  MOVF   48,W
035E:  BTFSS  0C.4
035F:  GOTO   35E
0360:  MOVWF  19
....................    putc(D[0]|0X30); 
0361:  MOVF   33,W
0362:  IORLW  30
0363:  MOVWF  48
0364:  MOVF   48,W
0365:  BTFSS  0C.4
0366:  GOTO   365
0367:  MOVWF  19
....................    PUTS("UNITS"); 
0368:  CLRF   48
0369:  MOVF   48,W
036A:  CALL   0DF
036B:  IORLW  00
036C:  BTFSC  03.2
036D:  GOTO   373
036E:  INCF   48,F
036F:  BTFSS  0C.4
0370:  GOTO   36F
0371:  MOVWF  19
0372:  GOTO   369
0373:  MOVLW  0D
0374:  BTFSS  0C.4
0375:  GOTO   374
0376:  MOVWF  19
0377:  MOVLW  0A
0378:  BTFSS  0C.4
0379:  GOTO   378
037A:  MOVWF  19
....................    putc(0x1A); 
037B:  MOVLW  1A
037C:  BTFSS  0C.4
037D:  GOTO   37C
037E:  MOVWF  19
.................... } 
037F:  RETLW  00
.................... void gsm1(unsigned char no) 
.................... { 
....................    if(no==0) 
0380:  MOVF   47,F
0381:  BTFSS  03.2
0382:  GOTO   397
....................       puts("AT+CMGS=\"+919944296357\"");  //+919597826505 
0383:  CLRF   48
0384:  MOVF   48,W
0385:  CALL   0A7
0386:  IORLW  00
0387:  BTFSC  03.2
0388:  GOTO   38E
0389:  INCF   48,F
038A:  BTFSS  0C.4
038B:  GOTO   38A
038C:  MOVWF  19
038D:  GOTO   384
038E:  MOVLW  0D
038F:  BTFSS  0C.4
0390:  GOTO   38F
0391:  MOVWF  19
0392:  MOVLW  0A
0393:  BTFSS  0C.4
0394:  GOTO   393
0395:  MOVWF  19
....................    else 
0396:  GOTO   3AA
....................       puts("AT+CMGS=\"+919944439363\"");  //918807155896 
0397:  CLRF   48
0398:  MOVF   48,W
0399:  CALL   0C3
039A:  IORLW  00
039B:  BTFSC  03.2
039C:  GOTO   3A2
039D:  INCF   48,F
039E:  BTFSS  0C.4
039F:  GOTO   39E
03A0:  MOVWF  19
03A1:  GOTO   398
03A2:  MOVLW  0D
03A3:  BTFSS  0C.4
03A4:  GOTO   3A3
03A5:  MOVWF  19
03A6:  MOVLW  0A
03A7:  BTFSS  0C.4
03A8:  GOTO   3A7
03A9:  MOVWF  19
....................  
....................    putc(v[3]|0X30); 
03AA:  MOVF   3B,W
03AB:  IORLW  30
03AC:  MOVWF  48
03AD:  MOVF   48,W
03AE:  BTFSS  0C.4
03AF:  GOTO   3AE
03B0:  MOVWF  19
....................    putc(v[2]|0X30); 
03B1:  MOVF   3A,W
03B2:  IORLW  30
03B3:  MOVWF  48
03B4:  MOVF   48,W
03B5:  BTFSS  0C.4
03B6:  GOTO   3B5
03B7:  MOVWF  19
....................    putc(v[1]|0X30); 
03B8:  MOVF   39,W
03B9:  IORLW  30
03BA:  MOVWF  48
03BB:  MOVF   48,W
03BC:  BTFSS  0C.4
03BD:  GOTO   3BC
03BE:  MOVWF  19
....................    putc(v[0]|0X30); 
03BF:  MOVF   38,W
03C0:  IORLW  30
03C1:  MOVWF  48
03C2:  MOVF   48,W
03C3:  BTFSS  0C.4
03C4:  GOTO   3C3
03C5:  MOVWF  19
....................    PUTS("LPM"); 
03C6:  CLRF   48
03C7:  MOVF   48,W
03C8:  CALL   0E9
03C9:  IORLW  00
03CA:  BTFSC  03.2
03CB:  GOTO   3D1
03CC:  INCF   48,F
03CD:  BTFSS  0C.4
03CE:  GOTO   3CD
03CF:  MOVWF  19
03D0:  GOTO   3C7
03D1:  MOVLW  0D
03D2:  BTFSS  0C.4
03D3:  GOTO   3D2
03D4:  MOVWF  19
03D5:  MOVLW  0A
03D6:  BTFSS  0C.4
03D7:  GOTO   3D6
03D8:  MOVWF  19
....................    putc(0x1A); 
03D9:  MOVLW  1A
03DA:  BTFSS  0C.4
03DB:  GOTO   3DA
03DC:  MOVWF  19
.................... } 
03DD:  RETLW  00
.................... void gsm2(unsigned char no) 
.................... { 
....................    if(no==0) 
03DE:  MOVF   47,F
03DF:  BTFSS  03.2
03E0:  GOTO   3F5
....................       puts("AT+CMGS=\"+919944296357\"");  //+919597826505 
03E1:  CLRF   48
03E2:  MOVF   48,W
03E3:  CALL   0A7
03E4:  IORLW  00
03E5:  BTFSC  03.2
03E6:  GOTO   3EC
03E7:  INCF   48,F
03E8:  BTFSS  0C.4
03E9:  GOTO   3E8
03EA:  MOVWF  19
03EB:  GOTO   3E2
03EC:  MOVLW  0D
03ED:  BTFSS  0C.4
03EE:  GOTO   3ED
03EF:  MOVWF  19
03F0:  MOVLW  0A
03F1:  BTFSS  0C.4
03F2:  GOTO   3F1
03F3:  MOVWF  19
....................    else 
03F4:  GOTO   408
....................    puts("AT+CMGS=\"+919944439363\"");  //918807155896 
03F5:  CLRF   48
03F6:  MOVF   48,W
03F7:  CALL   0C3
03F8:  IORLW  00
03F9:  BTFSC  03.2
03FA:  GOTO   400
03FB:  INCF   48,F
03FC:  BTFSS  0C.4
03FD:  GOTO   3FC
03FE:  MOVWF  19
03FF:  GOTO   3F6
0400:  MOVLW  0D
0401:  BTFSS  0C.4
0402:  GOTO   401
0403:  MOVWF  19
0404:  MOVLW  0A
0405:  BTFSS  0C.4
0406:  GOTO   405
0407:  MOVWF  19
....................    putc(c[3]|0x30); 
0408:  MOVF   40,W
0409:  IORLW  30
040A:  MOVWF  48
040B:  MOVF   48,W
040C:  BTFSS  0C.4
040D:  GOTO   40C
040E:  MOVWF  19
....................    putc(c[2]|0x30); 
040F:  MOVF   3F,W
0410:  IORLW  30
0411:  MOVWF  48
0412:  MOVF   48,W
0413:  BTFSS  0C.4
0414:  GOTO   413
0415:  MOVWF  19
....................    putc(c[1]|0x30); 
0416:  MOVF   3E,W
0417:  IORLW  30
0418:  MOVWF  48
0419:  MOVF   48,W
041A:  BTFSS  0C.4
041B:  GOTO   41A
041C:  MOVWF  19
....................    putc(c[0]|0x30); 
041D:  MOVF   3D,W
041E:  IORLW  30
041F:  MOVWF  48
0420:  MOVF   48,W
0421:  BTFSS  0C.4
0422:  GOTO   421
0423:  MOVWF  19
....................    puts(" RUPEES FOR EB"); 
0424:  CLRF   48
0425:  MOVF   48,W
0426:  CALL   0F1
0427:  IORLW  00
0428:  BTFSC  03.2
0429:  GOTO   42F
042A:  INCF   48,F
042B:  BTFSS  0C.4
042C:  GOTO   42B
042D:  MOVWF  19
042E:  GOTO   425
042F:  MOVLW  0D
0430:  BTFSS  0C.4
0431:  GOTO   430
0432:  MOVWF  19
0433:  MOVLW  0A
0434:  BTFSS  0C.4
0435:  GOTO   434
0436:  MOVWF  19
....................    putc(0x1A); 
0437:  MOVLW  1A
0438:  BTFSS  0C.4
0439:  GOTO   438
043A:  MOVWF  19
.................... } 
043B:  BCF    0A.3
043C:  BCF    0A.4
043D:  GOTO   616 (RETURN)
.................... void gsm3(unsigned char no) 
.................... { 
....................    if(no==0) 
043E:  MOVF   47,F
043F:  BTFSS  03.2
0440:  GOTO   455
....................       puts("AT+CMGS=\"+919944296357\"");  //+919597826505 
0441:  CLRF   48
0442:  MOVF   48,W
0443:  CALL   0A7
0444:  IORLW  00
0445:  BTFSC  03.2
0446:  GOTO   44C
0447:  INCF   48,F
0448:  BTFSS  0C.4
0449:  GOTO   448
044A:  MOVWF  19
044B:  GOTO   442
044C:  MOVLW  0D
044D:  BTFSS  0C.4
044E:  GOTO   44D
044F:  MOVWF  19
0450:  MOVLW  0A
0451:  BTFSS  0C.4
0452:  GOTO   451
0453:  MOVWF  19
....................    else 
0454:  GOTO   468
....................    puts("AT+CMGS=\"+919944439363\"");  //918807155896 
0455:  CLRF   48
0456:  MOVF   48,W
0457:  CALL   0C3
0458:  IORLW  00
0459:  BTFSC  03.2
045A:  GOTO   460
045B:  INCF   48,F
045C:  BTFSS  0C.4
045D:  GOTO   45C
045E:  MOVWF  19
045F:  GOTO   456
0460:  MOVLW  0D
0461:  BTFSS  0C.4
0462:  GOTO   461
0463:  MOVWF  19
0464:  MOVLW  0A
0465:  BTFSS  0C.4
0466:  GOTO   465
0467:  MOVWF  19
....................    putc(k[3]|0x30); 
0468:  MOVF   45,W
0469:  IORLW  30
046A:  MOVWF  48
046B:  MOVF   48,W
046C:  BTFSS  0C.4
046D:  GOTO   46C
046E:  MOVWF  19
....................    putc(k[2]|0x30); 
046F:  MOVF   44,W
0470:  IORLW  30
0471:  MOVWF  48
0472:  MOVF   48,W
0473:  BTFSS  0C.4
0474:  GOTO   473
0475:  MOVWF  19
....................    putc(k[1]|0x30); 
0476:  MOVF   43,W
0477:  IORLW  30
0478:  MOVWF  48
0479:  MOVF   48,W
047A:  BTFSS  0C.4
047B:  GOTO   47A
047C:  MOVWF  19
....................    putc(k[0]|0x30); 
047D:  MOVF   42,W
047E:  IORLW  30
047F:  MOVWF  48
0480:  MOVF   48,W
0481:  BTFSS  0C.4
0482:  GOTO   481
0483:  MOVWF  19
....................    puts(" RUPEES FOR WATER"); 
0484:  CLRF   48
0485:  MOVF   48,W
0486:  CALL   107
0487:  IORLW  00
0488:  BTFSC  03.2
0489:  GOTO   48F
048A:  INCF   48,F
048B:  BTFSS  0C.4
048C:  GOTO   48B
048D:  MOVWF  19
048E:  GOTO   485
048F:  MOVLW  0D
0490:  BTFSS  0C.4
0491:  GOTO   490
0492:  MOVWF  19
0493:  MOVLW  0A
0494:  BTFSS  0C.4
0495:  GOTO   494
0496:  MOVWF  19
....................    putc(0x1A); 
0497:  MOVLW  1A
0498:  BTFSS  0C.4
0499:  GOTO   498
049A:  MOVWF  19
.................... } 
049B:  BCF    0A.3
049C:  BCF    0A.4
049D:  GOTO   61F (RETURN)

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
